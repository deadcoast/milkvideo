[{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_renderer.py",
	"owner": "pyright",
	"code": {
		"value": "reportAttributeAccessIssue",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportAttributeAccessIssue"
		}
	},
	"severity": 8,
	"message": "Cannot access attribute \"message\" for class \"VideoMilkerError\"\n  Attribute \"message\" is unknown",
	"source": "basedpyright",
	"startLineNumber": 240,
	"startColumn": 33,
	"endLineNumber": 240,
	"endColumn": 40,
	"modelVersionId": 52
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_renderer.py",
	"owner": "pyright",
	"code": {
		"value": "reportAttributeAccessIssue",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportAttributeAccessIssue"
		}
	},
	"severity": 8,
	"message": "Cannot access attribute \"details\" for class \"VideoMilkerError\"\n  Attribute \"details\" is unknown",
	"source": "basedpyright",
	"startLineNumber": 241,
	"startColumn": 46,
	"endLineNumber": 241,
	"endColumn": 53,
	"modelVersionId": 52
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_renderer.py",
	"owner": "pyright",
	"code": {
		"value": "reportAttributeAccessIssue",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportAttributeAccessIssue"
		}
	},
	"severity": 8,
	"message": "Cannot access attribute \"details\" for class \"VideoMilkerError\"\n  Attribute \"details\" is unknown",
	"source": "basedpyright",
	"startLineNumber": 241,
	"startColumn": 71,
	"endLineNumber": 241,
	"endColumn": 78,
	"modelVersionId": 52
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_renderer.py",
	"owner": "pyright",
	"code": {
		"value": "reportAttributeAccessIssue",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportAttributeAccessIssue"
		}
	},
	"severity": 8,
	"message": "Cannot access attribute \"traceback\" for class \"VideoMilkerError\"\n  Attribute \"traceback\" is unknown",
	"source": "basedpyright",
	"startLineNumber": 242,
	"startColumn": 46,
	"endLineNumber": 242,
	"endColumn": 55,
	"modelVersionId": 52
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_renderer.py",
	"owner": "pyright",
	"code": {
		"value": "reportAttributeAccessIssue",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportAttributeAccessIssue"
		}
	},
	"severity": 8,
	"message": "Cannot access attribute \"traceback\" for class \"VideoMilkerError\"\n  Attribute \"traceback\" is unknown",
	"source": "basedpyright",
	"startLineNumber": 242,
	"startColumn": 73,
	"endLineNumber": 242,
	"endColumn": 82,
	"modelVersionId": 52
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_renderer.py",
	"owner": "Ruff",
	"code": {
		"value": "ANN204",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/missing-return-type-special-method",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Missing return type annotation for special method `__init__`",
	"source": "Ruff",
	"startLineNumber": 27,
	"startColumn": 9,
	"endLineNumber": 27,
	"endColumn": 17,
	"modelVersionId": 52
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_renderer.py",
	"owner": "Ruff",
	"code": {
		"value": "E501",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/line-too-long",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Line too long (126 > 120)",
	"source": "Ruff",
	"startLineNumber": 142,
	"startColumn": 121,
	"endLineNumber": 142,
	"endColumn": 127,
	"modelVersionId": 52
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_renderer.py",
	"owner": "Ruff",
	"code": {
		"value": "E501",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/line-too-long",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Line too long (128 > 120)",
	"source": "Ruff",
	"startLineNumber": 167,
	"startColumn": 121,
	"endLineNumber": 167,
	"endColumn": 129,
	"modelVersionId": 52
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_renderer.py",
	"owner": "Ruff",
	"code": {
		"value": "E501",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/line-too-long",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Line too long (144 > 120)",
	"source": "Ruff",
	"startLineNumber": 171,
	"startColumn": 121,
	"endLineNumber": 171,
	"endColumn": 145,
	"modelVersionId": 52
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_renderer.py",
	"owner": "Ruff",
	"code": {
		"value": "E501",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/line-too-long",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Line too long (124 > 120)",
	"source": "Ruff",
	"startLineNumber": 176,
	"startColumn": 121,
	"endLineNumber": 176,
	"endColumn": 125,
	"modelVersionId": 52
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_renderer.py",
	"owner": "Ruff",
	"code": {
		"value": "ANN401",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/any-type",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Dynamically typed expressions (typing.Any) are disallowed in `_get_box_style`",
	"source": "Ruff",
	"startLineNumber": 384,
	"startColumn": 33,
	"endLineNumber": 384,
	"endColumn": 36,
	"modelVersionId": 52
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 60,
	"startColumn": 42,
	"endLineNumber": 60,
	"endColumn": 68,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 286,
	"startColumn": 42,
	"endLineNumber": 286,
	"endColumn": 68,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"Literal['Invalid URL format. Please check and try again.']\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"Literal['Invalid URL format. Please check and try again.']\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 327,
	"startColumn": 21,
	"endLineNumber": 327,
	"endColumn": 70,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 403,
	"startColumn": 42,
	"endLineNumber": 403,
	"endColumn": 73,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"Literal['Video is private or unavailable']\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"Literal['Video is private or unavailable']\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 410,
	"startColumn": 21,
	"endLineNumber": 410,
	"endColumn": 54,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"Literal['Video not available in your region']\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"Literal['Video not available in your region']\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 413,
	"startColumn": 42,
	"endLineNumber": 413,
	"endColumn": 78,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"Literal['Age-restricted content']\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"Literal['Age-restricted content']\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 415,
	"startColumn": 42,
	"endLineNumber": 415,
	"endColumn": 66,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"Literal['Network error']\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"Literal['Network error']\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 417,
	"startColumn": 42,
	"endLineNumber": 417,
	"endColumn": 57,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 419,
	"startColumn": 42,
	"endLineNumber": 419,
	"endColumn": 67,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 454,
	"startColumn": 42,
	"endLineNumber": 454,
	"endColumn": 75,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 477,
	"startColumn": 38,
	"endLineNumber": 477,
	"endColumn": 73,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 599,
	"startColumn": 42,
	"endLineNumber": 599,
	"endColumn": 75,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 605,
	"startColumn": 38,
	"endLineNumber": 605,
	"endColumn": 79,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 622,
	"startColumn": 38,
	"endLineNumber": 622,
	"endColumn": 75,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 709,
	"startColumn": 42,
	"endLineNumber": 709,
	"endColumn": 73,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 717,
	"startColumn": 38,
	"endLineNumber": 717,
	"endColumn": 63,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"Literal['Invalid or unsupported URL']\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"Literal['Invalid or unsupported URL']\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 741,
	"startColumn": 38,
	"endLineNumber": 741,
	"endColumn": 66,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportAttributeAccessIssue",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportAttributeAccessIssue"
		}
	},
	"severity": 8,
	"message": "Cannot access attribute \"_show_video_preview\" for class \"MenuSystem*\"\n  Attribute \"_show_video_preview\" is unknown",
	"source": "basedpyright",
	"startLineNumber": 751,
	"startColumn": 18,
	"endLineNumber": 751,
	"endColumn": 37,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 761,
	"startColumn": 38,
	"endLineNumber": 761,
	"endColumn": 72,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportReturnType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportReturnType"
		}
	},
	"severity": 8,
	"message": "Type \"object | Unknown\" is not assignable to return type \"str\"\n  Type \"object | Unknown\" is not assignable to type \"str\"\n    \"object\" is not assignable to \"str\"",
	"source": "basedpyright",
	"startLineNumber": 783,
	"startColumn": 20,
	"endLineNumber": 783,
	"endColumn": 60,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"Literal['Audio extraction failed']\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"Literal['Audio extraction failed']\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 813,
	"startColumn": 42,
	"endLineNumber": 813,
	"endColumn": 67,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 816,
	"startColumn": 38,
	"endLineNumber": 816,
	"endColumn": 71,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"Literal['Invalid or unsupported URL']\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"Literal['Invalid or unsupported URL']\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 830,
	"startColumn": 38,
	"endLineNumber": 830,
	"endColumn": 66,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportAttributeAccessIssue",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportAttributeAccessIssue"
		}
	},
	"severity": 8,
	"message": "Cannot access attribute \"_show_video_preview\" for class \"MenuSystem*\"\n  Attribute \"_show_video_preview\" is unknown",
	"source": "basedpyright",
	"startLineNumber": 841,
	"startColumn": 18,
	"endLineNumber": 841,
	"endColumn": 37,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportAttributeAccessIssue",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportAttributeAccessIssue"
		}
	},
	"severity": 8,
	"message": "Cannot access attribute \"_download_single_video\" for class \"MenuSystem*\"\n  Attribute \"_download_single_video\" is unknown",
	"source": "basedpyright",
	"startLineNumber": 859,
	"startColumn": 26,
	"endLineNumber": 859,
	"endColumn": 48,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 862,
	"startColumn": 38,
	"endLineNumber": 862,
	"endColumn": 72,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"Literal['Chapter split download failed']\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"Literal['Chapter split download failed']\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 901,
	"startColumn": 42,
	"endLineNumber": 901,
	"endColumn": 73,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 904,
	"startColumn": 38,
	"endLineNumber": 904,
	"endColumn": 77,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"Literal['Failed to resume download']\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"Literal['Failed to resume download']\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 990,
	"startColumn": 54,
	"endLineNumber": 990,
	"endColumn": 81,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 993,
	"startColumn": 50,
	"endLineNumber": 993,
	"endColumn": 85,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"Literal['Invalid URL provided']\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"Literal['Invalid URL provided']\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 995,
	"startColumn": 46,
	"endLineNumber": 995,
	"endColumn": 68,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"Literal['Invalid selection']\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"Literal['Invalid selection']\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 997,
	"startColumn": 42,
	"endLineNumber": 997,
	"endColumn": 61,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"Literal['Please enter a valid number']\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"Literal['Please enter a valid number']\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 1000,
	"startColumn": 38,
	"endLineNumber": 1000,
	"endColumn": 67,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 1002,
	"startColumn": 38,
	"endLineNumber": 1002,
	"endColumn": 53,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Expression of type \"None\" cannot be assigned to parameter of type \"list[dict[str, Any]]\"\n  \"None\" is not assignable to \"list[dict[str, Any]]\"",
	"source": "basedpyright",
	"startLineNumber": 1004,
	"startColumn": 84,
	"endLineNumber": 1004,
	"endColumn": 88,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 1027,
	"startColumn": 42,
	"endLineNumber": 1027,
	"endColumn": 76,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 1142,
	"startColumn": 50,
	"endLineNumber": 1142,
	"endColumn": 87,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 1145,
	"startColumn": 38,
	"endLineNumber": 1145,
	"endColumn": 74,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 1162,
	"startColumn": 38,
	"endLineNumber": 1162,
	"endColumn": 72,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 1199,
	"startColumn": 38,
	"endLineNumber": 1199,
	"endColumn": 74,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 1249,
	"startColumn": 46,
	"endLineNumber": 1249,
	"endColumn": 82,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 1252,
	"startColumn": 38,
	"endLineNumber": 1252,
	"endColumn": 72,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 1272,
	"startColumn": 38,
	"endLineNumber": 1272,
	"endColumn": 80,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 1317,
	"startColumn": 38,
	"endLineNumber": 1317,
	"endColumn": 71,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 1354,
	"startColumn": 42,
	"endLineNumber": 1354,
	"endColumn": 68,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 1429,
	"startColumn": 42,
	"endLineNumber": 1429,
	"endColumn": 63,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 1448,
	"startColumn": 42,
	"endLineNumber": 1448,
	"endColumn": 71,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"Literal['pyperclip not installed. Install with: pip install…']\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"Literal['pyperclip not installed. Install with: pip install…']\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 1786,
	"startColumn": 38,
	"endLineNumber": 1786,
	"endColumn": 100,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 1788,
	"startColumn": 38,
	"endLineNumber": 1788,
	"endColumn": 79,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 1821,
	"startColumn": 38,
	"endLineNumber": 1821,
	"endColumn": 77,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 1857,
	"startColumn": 38,
	"endLineNumber": 1857,
	"endColumn": 82,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 1878,
	"startColumn": 38,
	"endLineNumber": 1878,
	"endColumn": 70,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 1904,
	"startColumn": 38,
	"endLineNumber": 1904,
	"endColumn": 72,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportAttributeAccessIssue",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportAttributeAccessIssue"
		}
	},
	"severity": 8,
	"message": "Cannot access attribute \"generate_report\" for class \"BatchProcessor\"\n  Attribute \"generate_report\" is unknown",
	"source": "basedpyright",
	"startLineNumber": 1909,
	"startColumn": 47,
	"endLineNumber": 1909,
	"endColumn": 62,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportAttributeAccessIssue",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportAttributeAccessIssue"
		}
	},
	"severity": 8,
	"message": "Cannot access attribute \"save_report\" for class \"BatchProcessor\"\n  Attribute \"save_report\" is unknown",
	"source": "basedpyright",
	"startLineNumber": 1915,
	"startColumn": 56,
	"endLineNumber": 1915,
	"endColumn": 67,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 1921,
	"startColumn": 38,
	"endLineNumber": 1921,
	"endColumn": 73,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportAttributeAccessIssue",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportAttributeAccessIssue"
		}
	},
	"severity": 8,
	"message": "Cannot access attribute \"get_analytics\" for class \"BatchProcessor\"\n  Attribute \"get_analytics\" is unknown",
	"source": "basedpyright",
	"startLineNumber": 1926,
	"startColumn": 50,
	"endLineNumber": 1926,
	"endColumn": 63,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 1948,
	"startColumn": 38,
	"endLineNumber": 1948,
	"endColumn": 72,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportAttributeAccessIssue",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportAttributeAccessIssue"
		}
	},
	"severity": 8,
	"message": "Cannot access attribute \"timeout\" for class \"DownloadSettings\"\n  Attribute \"timeout\" is unknown",
	"source": "basedpyright",
	"startLineNumber": 1957,
	"startColumn": 80,
	"endLineNumber": 1957,
	"endColumn": 87,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 1975,
	"startColumn": 38,
	"endLineNumber": 1975,
	"endColumn": 82,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 2007,
	"startColumn": 38,
	"endLineNumber": 2007,
	"endColumn": 72,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 2019,
	"startColumn": 42,
	"endLineNumber": 2019,
	"endColumn": 71,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 2029,
	"startColumn": 38,
	"endLineNumber": 2029,
	"endColumn": 73,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportAttributeAccessIssue",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportAttributeAccessIssue"
		}
	},
	"severity": 8,
	"message": "Cannot assign to attribute \"default_audio_format\" for class \"DownloadSettings\"\n  Attribute \"default_audio_format\" is unknown",
	"source": "basedpyright",
	"startLineNumber": 2052,
	"startColumn": 40,
	"endLineNumber": 2052,
	"endColumn": 60,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 2057,
	"startColumn": 38,
	"endLineNumber": 2057,
	"endColumn": 74,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportAttributeAccessIssue",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportAttributeAccessIssue"
		}
	},
	"severity": 8,
	"message": "Cannot assign to attribute \"default_audio_quality\" for class \"DownloadSettings\"\n  Attribute \"default_audio_quality\" is unknown",
	"source": "basedpyright",
	"startLineNumber": 2079,
	"startColumn": 40,
	"endLineNumber": 2079,
	"endColumn": 61,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 2084,
	"startColumn": 38,
	"endLineNumber": 2084,
	"endColumn": 75,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportAttributeAccessIssue",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportAttributeAccessIssue"
		}
	},
	"severity": 8,
	"message": "Cannot access attribute \"get_audio_batch_statistics\" for class \"BatchProcessor\"\n  Attribute \"get_audio_batch_statistics\" is unknown",
	"source": "basedpyright",
	"startLineNumber": 2089,
	"startColumn": 46,
	"endLineNumber": 2089,
	"endColumn": 72,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 2114,
	"startColumn": 38,
	"endLineNumber": 2114,
	"endColumn": 79,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 2131,
	"startColumn": 38,
	"endLineNumber": 2131,
	"endColumn": 74,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 2151,
	"startColumn": 38,
	"endLineNumber": 2151,
	"endColumn": 86,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 2173,
	"startColumn": 38,
	"endLineNumber": 2173,
	"endColumn": 75,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 2181,
	"startColumn": 38,
	"endLineNumber": 2181,
	"endColumn": 71,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 2189,
	"startColumn": 38,
	"endLineNumber": 2189,
	"endColumn": 76,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"Literal['Retry attempts must be 0 or greater']\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"Literal['Retry attempts must be 0 or greater']\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 2206,
	"startColumn": 46,
	"endLineNumber": 2206,
	"endColumn": 83,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"Literal['Invalid input']\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"Literal['Invalid input']\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 2208,
	"startColumn": 42,
	"endLineNumber": 2208,
	"endColumn": 57,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 2211,
	"startColumn": 38,
	"endLineNumber": 2211,
	"endColumn": 76,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportAttributeAccessIssue",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportAttributeAccessIssue"
		}
	},
	"severity": 8,
	"message": "Cannot assign to attribute \"timeout\" for class \"DownloadSettings\"\n  Attribute \"timeout\" is unknown",
	"source": "basedpyright",
	"startLineNumber": 2224,
	"startColumn": 44,
	"endLineNumber": 2224,
	"endColumn": 51,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"Literal['Timeout must be greater than 0']\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"Literal['Timeout must be greater than 0']\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 2228,
	"startColumn": 46,
	"endLineNumber": 2228,
	"endColumn": 78,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"Literal['Invalid input']\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"Literal['Invalid input']\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 2230,
	"startColumn": 42,
	"endLineNumber": 2230,
	"endColumn": 57,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 2233,
	"startColumn": 38,
	"endLineNumber": 2233,
	"endColumn": 69,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 2256,
	"startColumn": 38,
	"endLineNumber": 2256,
	"endColumn": 83,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportAttributeAccessIssue",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportAttributeAccessIssue"
		}
	},
	"severity": 8,
	"message": "Cannot assign to attribute \"memory_limit_mb\" for class \"DownloadSettings\"\n  Attribute \"memory_limit_mb\" is unknown",
	"source": "basedpyright",
	"startLineNumber": 2269,
	"startColumn": 44,
	"endLineNumber": 2269,
	"endColumn": 59,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"Literal['Memory limit must be greater than 0']\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"Literal['Memory limit must be greater than 0']\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 2273,
	"startColumn": 46,
	"endLineNumber": 2273,
	"endColumn": 83,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"Literal['Invalid input']\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"Literal['Invalid input']\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 2275,
	"startColumn": 42,
	"endLineNumber": 2275,
	"endColumn": 57,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 2278,
	"startColumn": 38,
	"endLineNumber": 2278,
	"endColumn": 74,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 2301,
	"startColumn": 38,
	"endLineNumber": 2301,
	"endColumn": 86,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportAttributeAccessIssue",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportAttributeAccessIssue"
		}
	},
	"severity": 8,
	"message": "Cannot assign to attribute \"auto_garbage_collection\" for class \"DownloadSettings\"\n  Attribute \"auto_garbage_collection\" is unknown",
	"source": "basedpyright",
	"startLineNumber": 2306,
	"startColumn": 36,
	"endLineNumber": 2306,
	"endColumn": 59,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 2310,
	"startColumn": 38,
	"endLineNumber": 2310,
	"endColumn": 69,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 2320,
	"startColumn": 38,
	"endLineNumber": 2320,
	"endColumn": 80,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"Literal['psutil not installed. Install with: pip install ps…']\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"Literal['psutil not installed. Install with: pip install ps…']\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 2342,
	"startColumn": 38,
	"endLineNumber": 2342,
	"endColumn": 94,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 2344,
	"startColumn": 38,
	"endLineNumber": 2344,
	"endColumn": 75,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportAttributeAccessIssue",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportAttributeAccessIssue"
		}
	},
	"severity": 8,
	"message": "Cannot access attribute \"export_results_as_text\" for class \"BatchProcessor\"\n  Attribute \"export_results_as_text\" is unknown",
	"source": "basedpyright",
	"startLineNumber": 2349,
	"startColumn": 46,
	"endLineNumber": 2349,
	"endColumn": 68,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 2352,
	"startColumn": 38,
	"endLineNumber": 2352,
	"endColumn": 66,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 2374,
	"startColumn": 42,
	"endLineNumber": 2374,
	"endColumn": 64,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 2434,
	"startColumn": 38,
	"endLineNumber": 2434,
	"endColumn": 77,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 2563,
	"startColumn": 38,
	"endLineNumber": 2563,
	"endColumn": 69,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 2608,
	"startColumn": 38,
	"endLineNumber": 2608,
	"endColumn": 73,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 2637,
	"startColumn": 42,
	"endLineNumber": 2637,
	"endColumn": 63,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 2654,
	"startColumn": 42,
	"endLineNumber": 2654,
	"endColumn": 81,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 2684,
	"startColumn": 42,
	"endLineNumber": 2684,
	"endColumn": 119,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 2702,
	"startColumn": 38,
	"endLineNumber": 2702,
	"endColumn": 79,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 2714,
	"startColumn": 38,
	"endLineNumber": 2714,
	"endColumn": 74,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 2757,
	"startColumn": 42,
	"endLineNumber": 2757,
	"endColumn": 73,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 2769,
	"startColumn": 42,
	"endLineNumber": 2769,
	"endColumn": 71,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 2773,
	"startColumn": 42,
	"endLineNumber": 2773,
	"endColumn": 75,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 2779,
	"startColumn": 38,
	"endLineNumber": 2779,
	"endColumn": 67,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 2808,
	"startColumn": 38,
	"endLineNumber": 2808,
	"endColumn": 79,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 2812,
	"startColumn": 38,
	"endLineNumber": 2812,
	"endColumn": 75,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 2845,
	"startColumn": 38,
	"endLineNumber": 2845,
	"endColumn": 67,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 2884,
	"startColumn": 42,
	"endLineNumber": 2884,
	"endColumn": 68,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportAttributeAccessIssue",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportAttributeAccessIssue"
		}
	},
	"severity": 8,
	"message": "Cannot access attribute \"_show_path_info\" for class \"MenuSystem*\"\n  Attribute \"_show_path_info\" is unknown",
	"source": "basedpyright",
	"startLineNumber": 2928,
	"startColumn": 51,
	"endLineNumber": 2928,
	"endColumn": 66,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportAttributeAccessIssue",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportAttributeAccessIssue"
		}
	},
	"severity": 8,
	"message": "Cannot access attribute \"_set_default_quality\" for class \"MenuSystem*\"\n  Attribute \"_set_default_quality\" is unknown",
	"source": "basedpyright",
	"startLineNumber": 2951,
	"startColumn": 56,
	"endLineNumber": 2951,
	"endColumn": 76,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportAttributeAccessIssue",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportAttributeAccessIssue"
		}
	},
	"severity": 8,
	"message": "Cannot access attribute \"_set_default_format\" for class \"MenuSystem*\"\n  Attribute \"_set_default_format\" is unknown",
	"source": "basedpyright",
	"startLineNumber": 2952,
	"startColumn": 55,
	"endLineNumber": 2952,
	"endColumn": 74,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportAttributeAccessIssue",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportAttributeAccessIssue"
		}
	},
	"severity": 8,
	"message": "Cannot access attribute \"_handle_audio_format_settings\" for class \"MenuSystem*\"\n  Attribute \"_handle_audio_format_settings\" is unknown",
	"source": "basedpyright",
	"startLineNumber": 2953,
	"startColumn": 58,
	"endLineNumber": 2953,
	"endColumn": 87,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportAttributeAccessIssue",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportAttributeAccessIssue"
		}
	},
	"severity": 8,
	"message": "Cannot access attribute \"_handle_quality_presets\" for class \"MenuSystem*\"\n  Attribute \"_handle_quality_presets\" is unknown",
	"source": "basedpyright",
	"startLineNumber": 2954,
	"startColumn": 52,
	"endLineNumber": 2954,
	"endColumn": 75,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportAttributeAccessIssue",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportAttributeAccessIssue"
		}
	},
	"severity": 8,
	"message": "Cannot access attribute \"_handle_advanced_format_options\" for class \"MenuSystem*\"\n  Attribute \"_handle_advanced_format_options\" is unknown",
	"source": "basedpyright",
	"startLineNumber": 2955,
	"startColumn": 60,
	"endLineNumber": 2955,
	"endColumn": 91,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportAttributeAccessIssue",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportAttributeAccessIssue"
		}
	},
	"severity": 8,
	"message": "Cannot access attribute \"_handle_day_folder_settings\" for class \"MenuSystem*\"\n  Attribute \"_handle_day_folder_settings\" is unknown",
	"source": "basedpyright",
	"startLineNumber": 2978,
	"startColumn": 56,
	"endLineNumber": 2978,
	"endColumn": 83,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportAttributeAccessIssue",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportAttributeAccessIssue"
		}
	},
	"severity": 8,
	"message": "Cannot access attribute \"_handle_file_naming_settings\" for class \"MenuSystem*\"\n  Attribute \"_handle_file_naming_settings\" is unknown",
	"source": "basedpyright",
	"startLineNumber": 2979,
	"startColumn": 57,
	"endLineNumber": 2979,
	"endColumn": 85,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportAttributeAccessIssue",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportAttributeAccessIssue"
		}
	},
	"severity": 8,
	"message": "Cannot access attribute \"_handle_folder_structure_settings\" for class \"MenuSystem*\"\n  Attribute \"_handle_folder_structure_settings\" is unknown",
	"source": "basedpyright",
	"startLineNumber": 2980,
	"startColumn": 62,
	"endLineNumber": 2980,
	"endColumn": 95,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportAttributeAccessIssue",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportAttributeAccessIssue"
		}
	},
	"severity": 8,
	"message": "Cannot access attribute \"_handle_metadata_settings\" for class \"MenuSystem*\"\n  Attribute \"_handle_metadata_settings\" is unknown",
	"source": "basedpyright",
	"startLineNumber": 2981,
	"startColumn": 54,
	"endLineNumber": 2981,
	"endColumn": 79,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportAttributeAccessIssue",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportAttributeAccessIssue"
		}
	},
	"severity": 8,
	"message": "Cannot access attribute \"_handle_network_settings\" for class \"MenuSystem*\"\n  Attribute \"_handle_network_settings\" is unknown",
	"source": "basedpyright",
	"startLineNumber": 3005,
	"startColumn": 53,
	"endLineNumber": 3005,
	"endColumn": 77,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportAttributeAccessIssue",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportAttributeAccessIssue"
		}
	},
	"severity": 8,
	"message": "Cannot access attribute \"_handle_ytdlp_arguments\" for class \"MenuSystem*\"\n  Attribute \"_handle_ytdlp_arguments\" is unknown",
	"source": "basedpyright",
	"startLineNumber": 3025,
	"startColumn": 53,
	"endLineNumber": 3025,
	"endColumn": 76,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportAttributeAccessIssue",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportAttributeAccessIssue"
		}
	},
	"severity": 8,
	"message": "Cannot access attribute \"_handle_proxy_settings\" for class \"MenuSystem*\"\n  Attribute \"_handle_proxy_settings\" is unknown",
	"source": "basedpyright",
	"startLineNumber": 3026,
	"startColumn": 51,
	"endLineNumber": 3026,
	"endColumn": 73,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportAttributeAccessIssue",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportAttributeAccessIssue"
		}
	},
	"severity": 8,
	"message": "Cannot access attribute \"_handle_cookie_settings\" for class \"MenuSystem*\"\n  Attribute \"_handle_cookie_settings\" is unknown",
	"source": "basedpyright",
	"startLineNumber": 3027,
	"startColumn": 54,
	"endLineNumber": 3027,
	"endColumn": 77,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportAttributeAccessIssue",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportAttributeAccessIssue"
		}
	},
	"severity": 8,
	"message": "Cannot access attribute \"_handle_auth_settings\" for class \"MenuSystem*\"\n  Attribute \"_handle_auth_settings\" is unknown",
	"source": "basedpyright",
	"startLineNumber": 3028,
	"startColumn": 51,
	"endLineNumber": 3028,
	"endColumn": 72,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportAttributeAccessIssue",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportAttributeAccessIssue"
		}
	},
	"severity": 8,
	"message": "Cannot access attribute \"_handle_custom_headers\" for class \"MenuSystem*\"\n  Attribute \"_handle_custom_headers\" is unknown",
	"source": "basedpyright",
	"startLineNumber": 3029,
	"startColumn": 51,
	"endLineNumber": 3029,
	"endColumn": 73,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportAttributeAccessIssue",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportAttributeAccessIssue"
		}
	},
	"severity": 8,
	"message": "Cannot access attribute \"_handle_config_backup\" for class \"MenuSystem*\"\n  Attribute \"_handle_config_backup\" is unknown",
	"source": "basedpyright",
	"startLineNumber": 3053,
	"startColumn": 57,
	"endLineNumber": 3053,
	"endColumn": 78,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 3102,
	"startColumn": 38,
	"endLineNumber": 3102,
	"endColumn": 75,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 3253,
	"startColumn": 38,
	"endLineNumber": 3253,
	"endColumn": 74,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 3328,
	"startColumn": 42,
	"endLineNumber": 3328,
	"endColumn": 73,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 3341,
	"startColumn": 38,
	"endLineNumber": 3341,
	"endColumn": 74,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"Literal['File dialog not available. Please enter path manua…']\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"Literal['File dialog not available. Please enter path manua…']\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 3365,
	"startColumn": 38,
	"endLineNumber": 3365,
	"endColumn": 94,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 3367,
	"startColumn": 38,
	"endLineNumber": 3367,
	"endColumn": 75,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 3383,
	"startColumn": 50,
	"endLineNumber": 3383,
	"endColumn": 96,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 3385,
	"startColumn": 46,
	"endLineNumber": 3385,
	"endColumn": 95,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 3392,
	"startColumn": 38,
	"endLineNumber": 3392,
	"endColumn": 64,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 3406,
	"startColumn": 42,
	"endLineNumber": 3406,
	"endColumn": 90,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"Literal['Limit must be between 1 and 10']\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"Literal['Limit must be between 1 and 10']\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 3462,
	"startColumn": 46,
	"endLineNumber": 3462,
	"endColumn": 78,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"Literal['Please enter a valid number']\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"Literal['Please enter a valid number']\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 3467,
	"startColumn": 38,
	"endLineNumber": 3467,
	"endColumn": 67,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 3469,
	"startColumn": 38,
	"endLineNumber": 3469,
	"endColumn": 72,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 3522,
	"startColumn": 42,
	"endLineNumber": 3522,
	"endColumn": 82,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 3532,
	"startColumn": 46,
	"endLineNumber": 3532,
	"endColumn": 89,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"Literal['Imported configuration has validation errors:']\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"Literal['Imported configuration has validation errors:']\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 3560,
	"startColumn": 50,
	"endLineNumber": 3560,
	"endColumn": 97,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 3562,
	"startColumn": 54,
	"endLineNumber": 3562,
	"endColumn": 68,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 3565,
	"startColumn": 42,
	"endLineNumber": 3565,
	"endColumn": 82,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"Literal['Configuration validation found issues:']\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"Literal['Configuration validation found issues:']\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 3576,
	"startColumn": 38,
	"endLineNumber": 3576,
	"endColumn": 78,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 3578,
	"startColumn": 42,
	"endLineNumber": 3578,
	"endColumn": 56,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 3598,
	"startColumn": 46,
	"endLineNumber": 3598,
	"endColumn": 60,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 3638,
	"startColumn": 46,
	"endLineNumber": 3638,
	"endColumn": 83,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 3704,
	"startColumn": 38,
	"endLineNumber": 3704,
	"endColumn": 76,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"Literal['File dialog not available. Please enter path manua…']\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"Literal['File dialog not available. Please enter path manua…']\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 3746,
	"startColumn": 38,
	"endLineNumber": 3746,
	"endColumn": 94,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 3749,
	"startColumn": 38,
	"endLineNumber": 3749,
	"endColumn": 75,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 3775,
	"startColumn": 42,
	"endLineNumber": 3775,
	"endColumn": 76,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 3812,
	"startColumn": 42,
	"endLineNumber": 3812,
	"endColumn": 68,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 3892,
	"startColumn": 38,
	"endLineNumber": 3892,
	"endColumn": 75,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 3978,
	"startColumn": 42,
	"endLineNumber": 3978,
	"endColumn": 74,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 3981,
	"startColumn": 38,
	"endLineNumber": 3981,
	"endColumn": 70,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 4031,
	"startColumn": 38,
	"endLineNumber": 4031,
	"endColumn": 77,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 4053,
	"startColumn": 38,
	"endLineNumber": 4053,
	"endColumn": 61,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 4101,
	"startColumn": 38,
	"endLineNumber": 4101,
	"endColumn": 71,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 4128,
	"startColumn": 38,
	"endLineNumber": 4128,
	"endColumn": 84,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"Literal['Maximum entries must be greater than 0']\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"Literal['Maximum entries must be greater than 0']\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 4145,
	"startColumn": 46,
	"endLineNumber": 4145,
	"endColumn": 86,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"Literal['Invalid input']\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"Literal['Invalid input']\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 4147,
	"startColumn": 42,
	"endLineNumber": 4147,
	"endColumn": 57,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 4150,
	"startColumn": 38,
	"endLineNumber": 4150,
	"endColumn": 73,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 4165,
	"startColumn": 38,
	"endLineNumber": 4165,
	"endColumn": 74,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"Literal['Cleanup interval must be greater than 0']\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"Literal['Cleanup interval must be greater than 0']\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 4182,
	"startColumn": 46,
	"endLineNumber": 4182,
	"endColumn": 87,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"Literal['Invalid input']\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"Literal['Invalid input']\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 4184,
	"startColumn": 42,
	"endLineNumber": 4184,
	"endColumn": 57,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 4187,
	"startColumn": 38,
	"endLineNumber": 4187,
	"endColumn": 78,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 4213,
	"startColumn": 38,
	"endLineNumber": 4213,
	"endColumn": 84,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportAttributeAccessIssue",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportAttributeAccessIssue"
		}
	},
	"severity": 8,
	"message": "Cannot access attribute \"get_storage_location\" for class \"HistoryManager\"\n  Attribute \"get_storage_location\" is unknown",
	"source": "basedpyright",
	"startLineNumber": 4218,
	"startColumn": 53,
	"endLineNumber": 4218,
	"endColumn": 73,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 4231,
	"startColumn": 38,
	"endLineNumber": 4231,
	"endColumn": 81,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportAttributeAccessIssue",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportAttributeAccessIssue"
		}
	},
	"severity": 8,
	"message": "Cannot access attribute \"create_backup\" for class \"HistoryManager\"\n  Attribute \"create_backup\" is unknown",
	"source": "basedpyright",
	"startLineNumber": 4236,
	"startColumn": 48,
	"endLineNumber": 4236,
	"endColumn": 61,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 4239,
	"startColumn": 38,
	"endLineNumber": 4239,
	"endColumn": 71,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportAttributeAccessIssue",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportAttributeAccessIssue"
		}
	},
	"severity": 8,
	"message": "Cannot access attribute \"restore_backup\" for class \"HistoryManager\"\n  Attribute \"restore_backup\" is unknown",
	"source": "basedpyright",
	"startLineNumber": 4246,
	"startColumn": 52,
	"endLineNumber": 4246,
	"endColumn": 66,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 4249,
	"startColumn": 38,
	"endLineNumber": 4249,
	"endColumn": 72,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportAttributeAccessIssue",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportAttributeAccessIssue"
		}
	},
	"severity": 8,
	"message": "Cannot access attribute \"get_storage_info\" for class \"HistoryManager\"\n  Attribute \"get_storage_info\" is unknown",
	"source": "basedpyright",
	"startLineNumber": 4254,
	"startColumn": 49,
	"endLineNumber": 4254,
	"endColumn": 65,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 4270,
	"startColumn": 38,
	"endLineNumber": 4270,
	"endColumn": 74,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportAttributeAccessIssue",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportAttributeAccessIssue"
		}
	},
	"severity": 8,
	"message": "Cannot access attribute \"search_by_title\" for class \"HistoryManager\"\n  Attribute \"search_by_title\" is unknown",
	"source": "basedpyright",
	"startLineNumber": 4275,
	"startColumn": 41,
	"endLineNumber": 4275,
	"endColumn": 56,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportAttributeAccessIssue",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportAttributeAccessIssue"
		}
	},
	"severity": 8,
	"message": "Cannot access attribute \"search_by_url\" for class \"HistoryManager\"\n  Attribute \"search_by_url\" is unknown",
	"source": "basedpyright",
	"startLineNumber": 4281,
	"startColumn": 41,
	"endLineNumber": 4281,
	"endColumn": 54,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportAttributeAccessIssue",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportAttributeAccessIssue"
		}
	},
	"severity": 8,
	"message": "Cannot access attribute \"search_by_uploader\" for class \"HistoryManager\"\n  Attribute \"search_by_uploader\" is unknown",
	"source": "basedpyright",
	"startLineNumber": 4287,
	"startColumn": 41,
	"endLineNumber": 4287,
	"endColumn": 59,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportAttributeAccessIssue",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportAttributeAccessIssue"
		}
	},
	"severity": 8,
	"message": "Cannot access attribute \"search_by_date_range\" for class \"HistoryManager\"\n  Attribute \"search_by_date_range\" is unknown",
	"source": "basedpyright",
	"startLineNumber": 4296,
	"startColumn": 41,
	"endLineNumber": 4296,
	"endColumn": 61,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"dict[str, str]\" cannot be assigned to parameter \"options\" of type \"dict[str, tuple[str, Any]]\" in function \"show_menu\"\n  \"dict[str, str]\" is not assignable to \"dict[str, tuple[str, Any]]\"\n    Type parameter \"_VT@dict\" is invariant, but \"str\" is not the same as \"tuple[str, Any]\"\n    Consider switching from \"dict\" to \"Mapping\" which is covariant in the value type",
	"source": "basedpyright",
	"startLineNumber": 4303,
	"startColumn": 59,
	"endLineNumber": 4303,
	"endColumn": 73,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportAttributeAccessIssue",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportAttributeAccessIssue"
		}
	},
	"severity": 8,
	"message": "Cannot access attribute \"search_by_status\" for class \"HistoryManager\"\n  Attribute \"search_by_status\" is unknown",
	"source": "basedpyright",
	"startLineNumber": 4305,
	"startColumn": 41,
	"endLineNumber": 4305,
	"endColumn": 57,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 4341,
	"startColumn": 38,
	"endLineNumber": 4341,
	"endColumn": 61,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportAttributeAccessIssue",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportAttributeAccessIssue"
		}
	},
	"severity": 8,
	"message": "Cannot access attribute \"export_as_csv\" for class \"HistoryManager\"\n  Attribute \"export_as_csv\" is unknown",
	"source": "basedpyright",
	"startLineNumber": 4347,
	"startColumn": 49,
	"endLineNumber": 4347,
	"endColumn": 62,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 4352,
	"startColumn": 38,
	"endLineNumber": 4352,
	"endColumn": 65,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportAttributeAccessIssue",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportAttributeAccessIssue"
		}
	},
	"severity": 8,
	"message": "Cannot access attribute \"export_as_json\" for class \"HistoryManager\"\n  Attribute \"export_as_json\" is unknown",
	"source": "basedpyright",
	"startLineNumber": 4358,
	"startColumn": 50,
	"endLineNumber": 4358,
	"endColumn": 64,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 4363,
	"startColumn": 38,
	"endLineNumber": 4363,
	"endColumn": 66,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportAttributeAccessIssue",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportAttributeAccessIssue"
		}
	},
	"severity": 8,
	"message": "Cannot access attribute \"export_as_text\" for class \"HistoryManager\"\n  Attribute \"export_as_text\" is unknown",
	"source": "basedpyright",
	"startLineNumber": 4369,
	"startColumn": 50,
	"endLineNumber": 4369,
	"endColumn": 64,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 4374,
	"startColumn": 38,
	"endLineNumber": 4374,
	"endColumn": 66,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportAttributeAccessIssue",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportAttributeAccessIssue"
		}
	},
	"severity": 8,
	"message": "Cannot access attribute \"export_statistics\" for class \"HistoryManager\"\n  Attribute \"export_statistics\" is unknown",
	"source": "basedpyright",
	"startLineNumber": 4379,
	"startColumn": 47,
	"endLineNumber": 4379,
	"endColumn": 64,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 4382,
	"startColumn": 38,
	"endLineNumber": 4382,
	"endColumn": 72,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportAttributeAccessIssue",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportAttributeAccessIssue"
		}
	},
	"severity": 8,
	"message": "Cannot access attribute \"export_as_csv\" for class \"HistoryManager\"\n  Attribute \"export_as_csv\" is unknown",
	"source": "basedpyright",
	"startLineNumber": 4387,
	"startColumn": 45,
	"endLineNumber": 4387,
	"endColumn": 58,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 4390,
	"startColumn": 38,
	"endLineNumber": 4390,
	"endColumn": 65,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportAttributeAccessIssue",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportAttributeAccessIssue"
		}
	},
	"severity": 8,
	"message": "Cannot access attribute \"export_as_json\" for class \"HistoryManager\"\n  Attribute \"export_as_json\" is unknown",
	"source": "basedpyright",
	"startLineNumber": 4395,
	"startColumn": 46,
	"endLineNumber": 4395,
	"endColumn": 60,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 4398,
	"startColumn": 38,
	"endLineNumber": 4398,
	"endColumn": 66,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 4406,
	"startColumn": 38,
	"endLineNumber": 4406,
	"endColumn": 75,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 4421,
	"startColumn": 42,
	"endLineNumber": 4421,
	"endColumn": 65,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 4462,
	"startColumn": 38,
	"endLineNumber": 4462,
	"endColumn": 70,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 4490,
	"startColumn": 42,
	"endLineNumber": 4490,
	"endColumn": 75,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 4510,
	"startColumn": 38,
	"endLineNumber": 4510,
	"endColumn": 69,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"error\" of type \"VideoMilkerError\" in function \"show_error\"\n  \"str\" is not assignable to \"VideoMilkerError\"",
	"source": "basedpyright",
	"startLineNumber": 4545,
	"startColumn": 42,
	"endLineNumber": 4545,
	"endColumn": 68,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "Ruff",
	"code": {
		"value": "ANN204",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/missing-return-type-special-method",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Missing return type annotation for special method `__init__`",
	"source": "Ruff",
	"startLineNumber": 25,
	"startColumn": 9,
	"endLineNumber": 25,
	"endColumn": 17,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "Ruff",
	"code": {
		"value": "F841",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/unused-variable",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Local variable `title` is assigned to but never used",
	"source": "Ruff",
	"startLineNumber": 683,
	"startColumn": 13,
	"endLineNumber": 683,
	"endColumn": 18,
	"tags": [
		1
	],
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "Ruff",
	"code": {
		"value": "F841",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/unused-variable",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Local variable `progress` is assigned to but never used",
	"source": "Ruff",
	"startLineNumber": 801,
	"startColumn": 13,
	"endLineNumber": 801,
	"endColumn": 21,
	"tags": [
		1
	],
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "Ruff",
	"code": {
		"value": "F841",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/unused-variable",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Local variable `progress` is assigned to but never used",
	"source": "Ruff",
	"startLineNumber": 888,
	"startColumn": 13,
	"endLineNumber": 888,
	"endColumn": 21,
	"tags": [
		1
	],
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "Ruff",
	"code": {
		"value": "RUF013",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/implicit-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "PEP 484 prohibits implicit `Optional`",
	"source": "Ruff",
	"startLineNumber": 1004,
	"startColumn": 61,
	"endLineNumber": 1004,
	"endColumn": 81,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "Ruff",
	"code": {
		"value": "B007",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/unused-loop-control-variable",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Loop control variable `hash_val` not used within loop body",
	"source": "Ruff",
	"startLineNumber": 1098,
	"startColumn": 21,
	"endLineNumber": 1098,
	"endColumn": 29,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "Ruff",
	"code": {
		"value": "E501",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/line-too-long",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Line too long (166 > 120)",
	"source": "Ruff",
	"startLineNumber": 1664,
	"startColumn": 121,
	"endLineNumber": 1664,
	"endColumn": 167,
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "Ruff",
	"code": {
		"value": "F841",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/unused-variable",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Local variable `use_proxy` is assigned to but never used",
	"source": "Ruff",
	"startLineNumber": 3223,
	"startColumn": 12,
	"endLineNumber": 3223,
	"endColumn": 21,
	"tags": [
		1
	],
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/menu_system.py",
	"owner": "Ruff",
	"code": {
		"value": "F841",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/unused-variable",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Local variable `new_location` is assigned to but never used",
	"source": "Ruff",
	"startLineNumber": 4221,
	"startColumn": 16,
	"endLineNumber": 4221,
	"endColumn": 28,
	"tags": [
		1
	],
	"modelVersionId": 11
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "pyright",
	"code": {
		"value": "reportAttributeAccessIssue",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportAttributeAccessIssue"
		}
	},
	"severity": 8,
	"message": "Cannot access attribute \"verbose\" for class \"BatchProcessor*\"\n  Attribute \"verbose\" is unknown",
	"source": "basedpyright",
	"startLineNumber": 393,
	"startColumn": 54,
	"endLineNumber": 393,
	"endColumn": 61,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "pyright",
	"code": {
		"value": "reportAttributeAccessIssue",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportAttributeAccessIssue"
		}
	},
	"severity": 8,
	"message": "Cannot access attribute \"verbose\" for class \"BatchProcessor*\"\n  Attribute \"verbose\" is unknown",
	"source": "basedpyright",
	"startLineNumber": 616,
	"startColumn": 54,
	"endLineNumber": 616,
	"endColumn": 61,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP035",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/deprecated-import",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "`typing.Dict` is deprecated, use `dict` instead",
	"source": "Ruff",
	"startLineNumber": 9,
	"startColumn": 1,
	"endLineNumber": 9,
	"endColumn": 24,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP035",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/deprecated-import",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "`typing.List` is deprecated, use `list` instead",
	"source": "Ruff",
	"startLineNumber": 10,
	"startColumn": 1,
	"endLineNumber": 10,
	"endColumn": 24,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "ANN204",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/missing-return-type-special-method",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Missing return type annotation for special method `__init__`",
	"source": "Ruff",
	"startLineNumber": 39,
	"startColumn": 9,
	"endLineNumber": 39,
	"endColumn": 17,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 39,
	"startColumn": 53,
	"endLineNumber": 39,
	"endColumn": 70,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 47,
	"startColumn": 20,
	"endLineNumber": 47,
	"endColumn": 24,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 48,
	"startColumn": 23,
	"endLineNumber": 48,
	"endColumn": 27,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 48,
	"startColumn": 28,
	"endLineNumber": 48,
	"endColumn": 32,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 56,
	"startColumn": 30,
	"endLineNumber": 56,
	"endColumn": 56,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 59,
	"startColumn": 26,
	"endLineNumber": 59,
	"endColumn": 44,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 60,
	"startColumn": 24,
	"endLineNumber": 60,
	"endColumn": 42,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 70,
	"startColumn": 30,
	"endLineNumber": 70,
	"endColumn": 34,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 93,
	"startColumn": 35,
	"endLineNumber": 93,
	"endColumn": 39,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 108,
	"startColumn": 41,
	"endLineNumber": 108,
	"endColumn": 65,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 108,
	"startColumn": 50,
	"endLineNumber": 108,
	"endColumn": 54,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 150,
	"startColumn": 39,
	"endLineNumber": 150,
	"endColumn": 63,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 150,
	"startColumn": 48,
	"endLineNumber": 150,
	"endColumn": 52,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 217,
	"startColumn": 30,
	"endLineNumber": 217,
	"endColumn": 34,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 217,
	"startColumn": 35,
	"endLineNumber": 217,
	"endColumn": 39,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 222,
	"startColumn": 39,
	"endLineNumber": 222,
	"endColumn": 43,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 222,
	"startColumn": 44,
	"endLineNumber": 222,
	"endColumn": 48,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 227,
	"startColumn": 47,
	"endLineNumber": 227,
	"endColumn": 71,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 227,
	"startColumn": 56,
	"endLineNumber": 227,
	"endColumn": 60,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "ANN204",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/missing-return-type-special-method",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Missing return type annotation for special method `__init__`",
	"source": "Ruff",
	"startLineNumber": 238,
	"startColumn": 9,
	"endLineNumber": 238,
	"endColumn": 17,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 238,
	"startColumn": 53,
	"endLineNumber": 238,
	"endColumn": 70,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 246,
	"startColumn": 55,
	"endLineNumber": 246,
	"endColumn": 59,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP015",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/redundant-open-modes",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Unnecessary mode argument",
	"source": "Ruff",
	"startLineNumber": 249,
	"startColumn": 34,
	"endLineNumber": 249,
	"endColumn": 37,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 265,
	"startColumn": 39,
	"endLineNumber": 265,
	"endColumn": 43,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 282,
	"startColumn": 39,
	"endLineNumber": 282,
	"endColumn": 43,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 294,
	"startColumn": 35,
	"endLineNumber": 294,
	"endColumn": 39,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 298,
	"startColumn": 47,
	"endLineNumber": 298,
	"endColumn": 71,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 298,
	"startColumn": 56,
	"endLineNumber": 298,
	"endColumn": 60,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 314,
	"startColumn": 36,
	"endLineNumber": 314,
	"endColumn": 40,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 314,
	"startColumn": 41,
	"endLineNumber": 314,
	"endColumn": 45,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 318,
	"startColumn": 53,
	"endLineNumber": 318,
	"endColumn": 77,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 318,
	"startColumn": 62,
	"endLineNumber": 318,
	"endColumn": 66,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 322,
	"startColumn": 35,
	"endLineNumber": 322,
	"endColumn": 39,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 322,
	"startColumn": 55,
	"endLineNumber": 322,
	"endColumn": 79,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 322,
	"startColumn": 64,
	"endLineNumber": 322,
	"endColumn": 68,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 322,
	"startColumn": 91,
	"endLineNumber": 322,
	"endColumn": 95,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 322,
	"startColumn": 96,
	"endLineNumber": 322,
	"endColumn": 100,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 406,
	"startColumn": 21,
	"endLineNumber": 406,
	"endColumn": 25,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 406,
	"startColumn": 68,
	"endLineNumber": 406,
	"endColumn": 92,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 406,
	"startColumn": 77,
	"endLineNumber": 406,
	"endColumn": 81,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 407,
	"startColumn": 10,
	"endLineNumber": 407,
	"endColumn": 14,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 407,
	"startColumn": 15,
	"endLineNumber": 407,
	"endColumn": 19,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 479,
	"startColumn": 21,
	"endLineNumber": 479,
	"endColumn": 25,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 479,
	"startColumn": 41,
	"endLineNumber": 479,
	"endColumn": 65,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 479,
	"startColumn": 50,
	"endLineNumber": 479,
	"endColumn": 54,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 480,
	"startColumn": 10,
	"endLineNumber": 480,
	"endColumn": 14,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 480,
	"startColumn": 15,
	"endLineNumber": 480,
	"endColumn": 19,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 505,
	"startColumn": 21,
	"endLineNumber": 505,
	"endColumn": 25,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 505,
	"startColumn": 48,
	"endLineNumber": 505,
	"endColumn": 61,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 505,
	"startColumn": 79,
	"endLineNumber": 505,
	"endColumn": 103,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 505,
	"startColumn": 88,
	"endLineNumber": 505,
	"endColumn": 92,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 506,
	"startColumn": 10,
	"endLineNumber": 506,
	"endColumn": 14,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 506,
	"startColumn": 15,
	"endLineNumber": 506,
	"endColumn": 19,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "E501",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/line-too-long",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Line too long (123 > 120)",
	"source": "Ruff",
	"startLineNumber": 607,
	"startColumn": 121,
	"endLineNumber": 607,
	"endColumn": 124,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 642,
	"startColumn": 15,
	"endLineNumber": 642,
	"endColumn": 19,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 644,
	"startColumn": 25,
	"endLineNumber": 644,
	"endColumn": 38,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 645,
	"startColumn": 18,
	"endLineNumber": 645,
	"endColumn": 42,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 645,
	"startColumn": 27,
	"endLineNumber": 645,
	"endColumn": 31,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 646,
	"startColumn": 10,
	"endLineNumber": 646,
	"endColumn": 14,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 646,
	"startColumn": 15,
	"endLineNumber": 646,
	"endColumn": 19,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 774,
	"startColumn": 37,
	"endLineNumber": 774,
	"endColumn": 41,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 774,
	"startColumn": 57,
	"endLineNumber": 774,
	"endColumn": 61,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 774,
	"startColumn": 62,
	"endLineNumber": 774,
	"endColumn": 66,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 802,
	"startColumn": 45,
	"endLineNumber": 802,
	"endColumn": 49,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 802,
	"startColumn": 50,
	"endLineNumber": 802,
	"endColumn": 54,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 802,
	"startColumn": 70,
	"endLineNumber": 802,
	"endColumn": 74,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 820,
	"startColumn": 24,
	"endLineNumber": 820,
	"endColumn": 28,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 820,
	"startColumn": 29,
	"endLineNumber": 820,
	"endColumn": 33,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 820,
	"startColumn": 55,
	"endLineNumber": 820,
	"endColumn": 79,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 820,
	"startColumn": 64,
	"endLineNumber": 820,
	"endColumn": 68,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 821,
	"startColumn": 10,
	"endLineNumber": 821,
	"endColumn": 14,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 821,
	"startColumn": 15,
	"endLineNumber": 821,
	"endColumn": 19,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 857,
	"startColumn": 55,
	"endLineNumber": 857,
	"endColumn": 59,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 883,
	"startColumn": 41,
	"endLineNumber": 883,
	"endColumn": 45,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 883,
	"startColumn": 55,
	"endLineNumber": 883,
	"endColumn": 59,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 916,
	"startColumn": 43,
	"endLineNumber": 916,
	"endColumn": 47,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 916,
	"startColumn": 70,
	"endLineNumber": 916,
	"endColumn": 83,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/batch_processor.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 916,
	"startColumn": 95,
	"endLineNumber": 916,
	"endColumn": 99,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"Unknown | dict[str, Unknown] | None\" cannot be assigned to parameter \"info\" of type \"Dict[str, Any]\" in function \"_get_downloaded_filename\"\n  Type \"Unknown | dict[str, Unknown] | None\" is not assignable to type \"Dict[str, Any]\"\n    \"None\" is not assignable to \"Dict[str, Any]\"",
	"source": "basedpyright",
	"startLineNumber": 89,
	"startColumn": 59,
	"endLineNumber": 89,
	"endColumn": 63,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"Any | float\" cannot be assigned to parameter \"download_id\" of type \"str\" in function \"update_progress\"\n  Type \"Any | float\" is not assignable to type \"str\"\n    \"float\" is not assignable to \"str\"",
	"source": "basedpyright",
	"startLineNumber": 177,
	"startColumn": 51,
	"endLineNumber": 177,
	"endColumn": 59,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"Any | None\" cannot be assigned to parameter \"speed\" of type \"float\" in function \"update_progress\"\n  Type \"Any | None\" is not assignable to type \"float\"\n    \"None\" is not assignable to \"float\"",
	"source": "basedpyright",
	"startLineNumber": 177,
	"startColumn": 80,
	"endLineNumber": 177,
	"endColumn": 92,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "pyright",
	"code": {
		"value": "reportAttributeAccessIssue",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportAttributeAccessIssue"
		}
	},
	"severity": 8,
	"message": "\"render_template\" is not a known attribute of module \".utils\"",
	"source": "basedpyright",
	"startLineNumber": 195,
	"startColumn": 37,
	"endLineNumber": 195,
	"endColumn": 52,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "pyright",
	"code": {
		"value": "reportReturnType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportReturnType"
		}
	},
	"severity": 8,
	"message": "Type \"Unknown | dict[Unknown, dict[Unknown, dict[Unknown, Unknown] | list[Unknown] | str | Unknown | int | float | bool] | list[Unknown] | str | Unknown | int | float | bool] | list[Unknown] | str | int | float | bool\" is not assignable to return type \"Dict[str, Any]\"\n  Type \"Unknown | dict[Unknown, dict[Unknown, dict[Unknown, Unknown] | list[Unknown] | str | Unknown | int | float | bool] | list[Unknown] | str | Unknown | int | float | bool] | list[Unknown] | str | int | float | bool\" is not assignable to type \"Dict[str, Any]\"\n    \"float\" is not assignable to \"Dict[str, Any]\"",
	"source": "basedpyright",
	"startLineNumber": 210,
	"startColumn": 24,
	"endLineNumber": 210,
	"endColumn": 47,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"Dict[str, Any]\" cannot be assigned to parameter \"value\" of type \"None\" in function \"__setitem__\"\n  \"Dict[str, Any]\" is not assignable to \"None\"",
	"source": "basedpyright",
	"startLineNumber": 319,
	"startColumn": 21,
	"endLineNumber": 319,
	"endColumn": 42,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"Dict[str, Any]\" cannot be assigned to parameter \"value\" of type \"None\" in function \"__setitem__\"\n  \"Dict[str, Any]\" is not assignable to \"None\"",
	"source": "basedpyright",
	"startLineNumber": 327,
	"startColumn": 21,
	"endLineNumber": 327,
	"endColumn": 47,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"Dict[str, Any]\" cannot be assigned to parameter \"value\" of type \"None\" in function \"__setitem__\"\n  \"Dict[str, Any]\" is not assignable to \"None\"",
	"source": "basedpyright",
	"startLineNumber": 335,
	"startColumn": 21,
	"endLineNumber": 335,
	"endColumn": 47,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"Dict[str, Any]\" cannot be assigned to parameter \"value\" of type \"None\" in function \"__setitem__\"\n  \"Dict[str, Any]\" is not assignable to \"None\"",
	"source": "basedpyright",
	"startLineNumber": 339,
	"startColumn": 21,
	"endLineNumber": 339,
	"endColumn": 41,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"Dict[str, Any]\" cannot be assigned to parameter \"value\" of type \"None\" in function \"__setitem__\"\n  \"Dict[str, Any]\" is not assignable to \"None\"",
	"source": "basedpyright",
	"startLineNumber": 343,
	"startColumn": 21,
	"endLineNumber": 343,
	"endColumn": 42,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"Dict[str, Any]\" cannot be assigned to parameter \"value\" of type \"None\" in function \"__setitem__\"\n  \"Dict[str, Any]\" is not assignable to \"None\"",
	"source": "basedpyright",
	"startLineNumber": 347,
	"startColumn": 21,
	"endLineNumber": 347,
	"endColumn": 47,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Expression of type \"None\" cannot be assigned to parameter of type \"str\"\n  \"None\" is not assignable to \"str\"",
	"source": "basedpyright",
	"startLineNumber": 458,
	"startColumn": 57,
	"endLineNumber": 458,
	"endColumn": 61,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "Ruff",
	"code": {
		"value": "F821",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/undefined-name",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 8,
	"message": "Undefined name `timedelta`",
	"source": "Ruff",
	"startLineNumber": 485,
	"startColumn": 40,
	"endLineNumber": 485,
	"endColumn": 49,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "pyright",
	"code": {
		"value": "reportUndefinedVariable",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportUndefinedVariable"
		}
	},
	"severity": 8,
	"message": "\"timedelta\" is not defined",
	"source": "basedpyright",
	"startLineNumber": 485,
	"startColumn": 40,
	"endLineNumber": 485,
	"endColumn": 49,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "pyright",
	"code": {
		"value": "reportReturnType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportReturnType"
		}
	},
	"severity": 8,
	"message": "Type \"list[Unknown | BaseException]\" is not assignable to return type \"List[Dict[str, Any]]\"\n  \"list[Unknown | BaseException]\" is not assignable to \"List[Dict[str, Any]]\"\n    Type parameter \"_T@list\" is invariant, but \"Unknown | BaseException\" is not the same as \"Dict[str, Any]\"\n    Consider switching from \"list\" to \"Sequence\" which is covariant",
	"source": "basedpyright",
	"startLineNumber": 518,
	"startColumn": 16,
	"endLineNumber": 518,
	"endColumn": 68,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "Ruff",
	"code": {
		"value": "UP035",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/deprecated-import",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "`typing.Dict` is deprecated, use `dict` instead",
	"source": "Ruff",
	"startLineNumber": 6,
	"startColumn": 1,
	"endLineNumber": 6,
	"endColumn": 24,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "Ruff",
	"code": {
		"value": "UP035",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/deprecated-import",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "`typing.List` is deprecated, use `list` instead",
	"source": "Ruff",
	"startLineNumber": 7,
	"startColumn": 1,
	"endLineNumber": 7,
	"endColumn": 24,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "Ruff",
	"code": {
		"value": "ANN204",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/missing-return-type-special-method",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Missing return type annotation for special method `__init__`",
	"source": "Ruff",
	"startLineNumber": 23,
	"startColumn": 9,
	"endLineNumber": 23,
	"endColumn": 17,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 23,
	"startColumn": 53,
	"endLineNumber": 23,
	"endColumn": 70,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 29,
	"startColumn": 30,
	"endLineNumber": 29,
	"endColumn": 34,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 29,
	"startColumn": 35,
	"endLineNumber": 29,
	"endColumn": 39,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 30,
	"startColumn": 32,
	"endLineNumber": 30,
	"endColumn": 56,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 30,
	"startColumn": 41,
	"endLineNumber": 30,
	"endColumn": 45,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 33,
	"startColumn": 47,
	"endLineNumber": 33,
	"endColumn": 71,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 33,
	"startColumn": 56,
	"endLineNumber": 33,
	"endColumn": 60,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 55,
	"startColumn": 35,
	"endLineNumber": 55,
	"endColumn": 39,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 66,
	"startColumn": 50,
	"endLineNumber": 66,
	"endColumn": 74,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 66,
	"startColumn": 59,
	"endLineNumber": 66,
	"endColumn": 63,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 66,
	"startColumn": 86,
	"endLineNumber": 66,
	"endColumn": 90,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 102,
	"startColumn": 36,
	"endLineNumber": 102,
	"endColumn": 40,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 102,
	"startColumn": 56,
	"endLineNumber": 102,
	"endColumn": 80,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 102,
	"startColumn": 65,
	"endLineNumber": 102,
	"endColumn": 69,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 102,
	"startColumn": 92,
	"endLineNumber": 102,
	"endColumn": 96,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 102,
	"startColumn": 97,
	"endLineNumber": 102,
	"endColumn": 101,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 118,
	"startColumn": 55,
	"endLineNumber": 118,
	"endColumn": 79,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 118,
	"startColumn": 64,
	"endLineNumber": 118,
	"endColumn": 68,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 118,
	"startColumn": 91,
	"endLineNumber": 118,
	"endColumn": 95,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 149,
	"startColumn": 44,
	"endLineNumber": 149,
	"endColumn": 48,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 153,
	"startColumn": 33,
	"endLineNumber": 153,
	"endColumn": 37,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 184,
	"startColumn": 46,
	"endLineNumber": 184,
	"endColumn": 50,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 184,
	"startColumn": 71,
	"endLineNumber": 184,
	"endColumn": 75,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 203,
	"startColumn": 43,
	"endLineNumber": 203,
	"endColumn": 47,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 222,
	"startColumn": 41,
	"endLineNumber": 222,
	"endColumn": 45,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 222,
	"startColumn": 46,
	"endLineNumber": 222,
	"endColumn": 50,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 234,
	"startColumn": 50,
	"endLineNumber": 234,
	"endColumn": 54,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 234,
	"startColumn": 55,
	"endLineNumber": 234,
	"endColumn": 59,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 284,
	"startColumn": 45,
	"endLineNumber": 284,
	"endColumn": 49,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "Ruff",
	"code": {
		"value": "F841",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/unused-variable",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Local variable `format_id` is assigned to but never used",
	"source": "Ruff",
	"startLineNumber": 299,
	"startColumn": 17,
	"endLineNumber": 299,
	"endColumn": 26,
	"tags": [
		1
	],
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 354,
	"startColumn": 41,
	"endLineNumber": 354,
	"endColumn": 45,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 354,
	"startColumn": 46,
	"endLineNumber": 354,
	"endColumn": 50,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 378,
	"startColumn": 57,
	"endLineNumber": 378,
	"endColumn": 81,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 378,
	"startColumn": 66,
	"endLineNumber": 378,
	"endColumn": 70,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 378,
	"startColumn": 93,
	"endLineNumber": 378,
	"endColumn": 97,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 433,
	"startColumn": 39,
	"endLineNumber": 433,
	"endColumn": 43,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 433,
	"startColumn": 44,
	"endLineNumber": 433,
	"endColumn": 48,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 437,
	"startColumn": 45,
	"endLineNumber": 437,
	"endColumn": 49,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 437,
	"startColumn": 50,
	"endLineNumber": 437,
	"endColumn": 54,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "Ruff",
	"code": {
		"value": "RUF013",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/implicit-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "PEP 484 prohibits implicit `Optional`",
	"source": "Ruff",
	"startLineNumber": 458,
	"startColumn": 51,
	"endLineNumber": 458,
	"endColumn": 54,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 458,
	"startColumn": 66,
	"endLineNumber": 458,
	"endColumn": 70,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 482,
	"startColumn": 66,
	"endLineNumber": 482,
	"endColumn": 70,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 504,
	"startColumn": 62,
	"endLineNumber": 504,
	"endColumn": 86,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 504,
	"startColumn": 71,
	"endLineNumber": 504,
	"endColumn": 75,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 504,
	"startColumn": 98,
	"endLineNumber": 504,
	"endColumn": 102,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 510,
	"startColumn": 21,
	"endLineNumber": 510,
	"endColumn": 25,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 510,
	"startColumn": 41,
	"endLineNumber": 510,
	"endColumn": 65,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 510,
	"startColumn": 50,
	"endLineNumber": 510,
	"endColumn": 54,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 511,
	"startColumn": 10,
	"endLineNumber": 511,
	"endColumn": 14,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 511,
	"startColumn": 15,
	"endLineNumber": 511,
	"endColumn": 19,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/downloader.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 520,
	"startColumn": 55,
	"endLineNumber": 520,
	"endColumn": 59,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/exceptions/download_errors.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Expression of type \"None\" cannot be assigned to parameter of type \"dict[Unknown, Unknown]\"\n  \"None\" is not assignable to \"dict[Unknown, Unknown]\"",
	"source": "basedpyright",
	"startLineNumber": 175,
	"startColumn": 87,
	"endLineNumber": 175,
	"endColumn": 91,
	"modelVersionId": 115
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/exceptions/download_errors.py",
	"owner": "pyright",
	"code": {
		"value": "reportAttributeAccessIssue",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportAttributeAccessIssue"
		}
	},
	"severity": 8,
	"message": "Cannot assign to attribute \"url\" for class \"VideoMilkerError\"\n  Attribute \"url\" is unknown",
	"source": "basedpyright",
	"startLineNumber": 179,
	"startColumn": 11,
	"endLineNumber": 179,
	"endColumn": 14,
	"modelVersionId": 115
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/exceptions/download_errors.py",
	"owner": "pyright",
	"code": {
		"value": "reportAttributeAccessIssue",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportAttributeAccessIssue"
		}
	},
	"severity": 8,
	"message": "Cannot assign to attribute \"context\" for class \"VideoMilkerError\"\n  Attribute \"context\" is unknown",
	"source": "basedpyright",
	"startLineNumber": 180,
	"startColumn": 11,
	"endLineNumber": 180,
	"endColumn": 18,
	"modelVersionId": 115
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/exceptions/download_errors.py",
	"owner": "pyright",
	"code": {
		"value": "reportAttributeAccessIssue",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportAttributeAccessIssue"
		}
	},
	"severity": 8,
	"message": "Cannot access attribute \"url\" for class \"VideoMilkerError\"\n  Attribute \"url\" is unknown",
	"source": "basedpyright",
	"startLineNumber": 314,
	"startColumn": 40,
	"endLineNumber": 314,
	"endColumn": 43,
	"modelVersionId": 115
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/exceptions/download_errors.py",
	"owner": "pyright",
	"code": {
		"value": "reportAttributeAccessIssue",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportAttributeAccessIssue"
		}
	},
	"severity": 8,
	"message": "Cannot access attribute \"url\" for class \"VideoMilkerError\"\n  Attribute \"url\" is unknown",
	"source": "basedpyright",
	"startLineNumber": 315,
	"startColumn": 41,
	"endLineNumber": 315,
	"endColumn": 44,
	"modelVersionId": 115
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/exceptions/download_errors.py",
	"owner": "Ruff",
	"code": {
		"value": "RUF013",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/implicit-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "PEP 484 prohibits implicit `Optional`",
	"source": "Ruff",
	"startLineNumber": 175,
	"startColumn": 80,
	"endLineNumber": 175,
	"endColumn": 84,
	"modelVersionId": 115
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/history/history_manager.py",
	"owner": "pyright",
	"code": {
		"value": "reportReturnType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportReturnType"
		}
	},
	"severity": 8,
	"message": "Type \"int | None\" is not assignable to return type \"int\"\n  Type \"int | None\" is not assignable to type \"int\"\n    \"None\" is not assignable to \"int\"",
	"source": "basedpyright",
	"startLineNumber": 138,
	"startColumn": 24,
	"endLineNumber": 138,
	"endColumn": 35,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/history/history_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP035",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/deprecated-import",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "`typing.Dict` is deprecated, use `dict` instead",
	"source": "Ruff",
	"startLineNumber": 9,
	"startColumn": 1,
	"endLineNumber": 9,
	"endColumn": 24,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/history/history_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP035",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/deprecated-import",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "`typing.List` is deprecated, use `list` instead",
	"source": "Ruff",
	"startLineNumber": 10,
	"startColumn": 1,
	"endLineNumber": 10,
	"endColumn": 24,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/history/history_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "ANN204",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/missing-return-type-special-method",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Missing return type annotation for special method `__init__`",
	"source": "Ruff",
	"startLineNumber": 21,
	"startColumn": 9,
	"endLineNumber": 21,
	"endColumn": 17,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/history/history_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 91,
	"startColumn": 50,
	"endLineNumber": 91,
	"endColumn": 54,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/history/history_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 91,
	"startColumn": 74,
	"endLineNumber": 91,
	"endColumn": 78,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/history/history_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 143,
	"startColumn": 49,
	"endLineNumber": 143,
	"endColumn": 73,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/history/history_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 143,
	"startColumn": 58,
	"endLineNumber": 143,
	"endColumn": 62,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/history/history_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 161,
	"startColumn": 56,
	"endLineNumber": 161,
	"endColumn": 60,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/history/history_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 161,
	"startColumn": 61,
	"endLineNumber": 161,
	"endColumn": 65,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/history/history_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 182,
	"startColumn": 40,
	"endLineNumber": 182,
	"endColumn": 53,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/history/history_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 182,
	"startColumn": 65,
	"endLineNumber": 182,
	"endColumn": 69,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/history/history_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 182,
	"startColumn": 70,
	"endLineNumber": 182,
	"endColumn": 74,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/history/history_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 211,
	"startColumn": 47,
	"endLineNumber": 211,
	"endColumn": 51,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/history/history_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 211,
	"startColumn": 52,
	"endLineNumber": 211,
	"endColumn": 56,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/history/history_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 233,
	"startColumn": 40,
	"endLineNumber": 233,
	"endColumn": 44,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/history/history_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 233,
	"startColumn": 59,
	"endLineNumber": 233,
	"endColumn": 63,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/history/history_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 233,
	"startColumn": 64,
	"endLineNumber": 233,
	"endColumn": 68,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/history/history_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 303,
	"startColumn": 57,
	"endLineNumber": 303,
	"endColumn": 61,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/history/history_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 338,
	"startColumn": 55,
	"endLineNumber": 338,
	"endColumn": 59,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/history/history_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 338,
	"startColumn": 60,
	"endLineNumber": 338,
	"endColumn": 64,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/history/history_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 359,
	"startColumn": 88,
	"endLineNumber": 359,
	"endColumn": 92,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/history/history_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 359,
	"startColumn": 93,
	"endLineNumber": 359,
	"endColumn": 97,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/history/history_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 380,
	"startColumn": 33,
	"endLineNumber": 380,
	"endColumn": 37,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/history/history_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 445,
	"startColumn": 58,
	"endLineNumber": 445,
	"endColumn": 62,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/history/history_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP015",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/redundant-open-modes",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Unnecessary mode argument",
	"source": "Ruff",
	"startLineNumber": 620,
	"startColumn": 40,
	"endLineNumber": 620,
	"endColumn": 43,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/history/history_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP015",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/redundant-open-modes",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Unnecessary mode argument",
	"source": "Ruff",
	"startLineNumber": 627,
	"startColumn": 40,
	"endLineNumber": 627,
	"endColumn": 43,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/main.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Expression of type \"None\" cannot be assigned to parameter of type \"str\"\n  \"None\" is not assignable to \"str\"",
	"source": "basedpyright",
	"startLineNumber": 32,
	"startColumn": 24,
	"endLineNumber": 32,
	"endColumn": 28,
	"modelVersionId": 6
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/main.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Expression of type \"None\" cannot be assigned to parameter of type \"str\"\n  \"None\" is not assignable to \"str\"",
	"source": "basedpyright",
	"startLineNumber": 32,
	"startColumn": 74,
	"endLineNumber": 32,
	"endColumn": 78,
	"modelVersionId": 6
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/main.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Expression of type \"None\" cannot be assigned to parameter of type \"str\"\n  \"None\" is not assignable to \"str\"",
	"source": "basedpyright",
	"startLineNumber": 32,
	"startColumn": 92,
	"endLineNumber": 32,
	"endColumn": 96,
	"modelVersionId": 6
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/main.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Expression of type \"None\" cannot be assigned to parameter of type \"str\"\n  \"None\" is not assignable to \"str\"",
	"source": "basedpyright",
	"startLineNumber": 32,
	"startColumn": 109,
	"endLineNumber": 32,
	"endColumn": 113,
	"modelVersionId": 6
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/main.py",
	"owner": "pyright",
	"code": {
		"value": "reportArgumentType",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportArgumentType"
		}
	},
	"severity": 8,
	"message": "Argument of type \"str\" cannot be assigned to parameter \"config_path\" of type \"Path | None\" in function \"load_config\"\n  Type \"str\" is not assignable to type \"Path | None\"\n    \"str\" is not assignable to \"Path\"\n    \"str\" is not assignable to \"None\"",
	"source": "basedpyright",
	"startLineNumber": 40,
	"startColumn": 59,
	"endLineNumber": 40,
	"endColumn": 65,
	"modelVersionId": 6
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/main.py",
	"owner": "Ruff",
	"code": {
		"value": "ANN201",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/missing-return-type-undocumented-public-function",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Missing return type annotation for public function `main`",
	"source": "Ruff",
	"startLineNumber": 32,
	"startColumn": 5,
	"endLineNumber": 32,
	"endColumn": 9,
	"modelVersionId": 6
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/main.py",
	"owner": "Ruff",
	"code": {
		"value": "RUF013",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/implicit-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "PEP 484 prohibits implicit `Optional`",
	"source": "Ruff",
	"startLineNumber": 32,
	"startColumn": 18,
	"endLineNumber": 32,
	"endColumn": 21,
	"modelVersionId": 6
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/main.py",
	"owner": "Ruff",
	"code": {
		"value": "RUF013",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/implicit-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "PEP 484 prohibits implicit `Optional`",
	"source": "Ruff",
	"startLineNumber": 32,
	"startColumn": 68,
	"endLineNumber": 32,
	"endColumn": 71,
	"modelVersionId": 6
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/main.py",
	"owner": "Ruff",
	"code": {
		"value": "RUF013",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/implicit-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "PEP 484 prohibits implicit `Optional`",
	"source": "Ruff",
	"startLineNumber": 32,
	"startColumn": 86,
	"endLineNumber": 32,
	"endColumn": 89,
	"modelVersionId": 6
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/main.py",
	"owner": "Ruff",
	"code": {
		"value": "RUF013",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/implicit-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "PEP 484 prohibits implicit `Optional`",
	"source": "Ruff",
	"startLineNumber": 32,
	"startColumn": 103,
	"endLineNumber": 32,
	"endColumn": 106,
	"modelVersionId": 6
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/utils/extract_export_duplicates.py",
	"owner": "pyright",
	"code": {
		"value": "reportMissingImports",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportMissingImports"
		}
	},
	"severity": 8,
	"message": "Import \"parso\" could not be resolved",
	"source": "basedpyright",
	"startLineNumber": 9,
	"startColumn": 8,
	"endLineNumber": 9,
	"endColumn": 13,
	"modelVersionId": 146
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/utils/extract_export_duplicates.py",
	"owner": "pyright",
	"code": {
		"value": "reportMissingImports",
		"target": {
			"$mid": 1,
			"path": "/v1.29.4/configuration/config-files/",
			"scheme": "https",
			"authority": "docs.basedpyright.com",
			"fragment": "reportMissingImports"
		}
	},
	"severity": 8,
	"message": "Import \"redbaron\" could not be resolved",
	"source": "basedpyright",
	"startLineNumber": 10,
	"startColumn": 6,
	"endLineNumber": 10,
	"endColumn": 14,
	"modelVersionId": 146
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/utils/extract_export_duplicates.py",
	"owner": "Ruff",
	"code": {
		"value": "B007",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/unused-loop-control-variable",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Loop control variable `name` not used within loop body",
	"source": "Ruff",
	"startLineNumber": 210,
	"startColumn": 13,
	"endLineNumber": 210,
	"endColumn": 17,
	"modelVersionId": 146
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/utils/extract_export_duplicates.py",
	"owner": "Ruff",
	"code": {
		"value": "B023",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/function-uses-loop-variable",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Function definition does not bind loop variable `start`",
	"source": "Ruff",
	"startLineNumber": 218,
	"startColumn": 78,
	"endLineNumber": 218,
	"endColumn": 83,
	"modelVersionId": 146
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/utils/extract_export_duplicates.py",
	"owner": "Ruff",
	"code": {
		"value": "B023",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/function-uses-loop-variable",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Function definition does not bind loop variable `end`",
	"source": "Ruff",
	"startLineNumber": 219,
	"startColumn": 73,
	"endLineNumber": 219,
	"endColumn": 76,
	"modelVersionId": 146
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/utils/extract_export_duplicates.py",
	"owner": "Ruff",
	"code": {
		"value": "B007",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/unused-loop-control-variable",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Loop control variable `name` not used within loop body",
	"source": "Ruff",
	"startLineNumber": 350,
	"startColumn": 13,
	"endLineNumber": 350,
	"endColumn": 17,
	"modelVersionId": 146
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/utils/extract_export_duplicates.py",
	"owner": "Ruff",
	"code": {
		"value": "F841",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/unused-variable",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Local variable `include_nested` is assigned to but never used",
	"source": "Ruff",
	"startLineNumber": 959,
	"startColumn": 13,
	"endLineNumber": 959,
	"endColumn": 27,
	"tags": [
		1
	],
	"modelVersionId": 146
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/utils/extract_export_duplicates.py",
	"owner": "Ruff",
	"code": {
		"value": "F841",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/unused-variable",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Local variable `duplicate_separator` is assigned to but never used",
	"source": "Ruff",
	"startLineNumber": 960,
	"startColumn": 13,
	"endLineNumber": 960,
	"endColumn": 32,
	"tags": [
		1
	],
	"modelVersionId": 146
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/utils/extract_export_duplicates.py",
	"owner": "Ruff",
	"code": {
		"value": "F841",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/unused-variable",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Local variable `date_format` is assigned to but never used",
	"source": "Ruff",
	"startLineNumber": 961,
	"startColumn": 13,
	"endLineNumber": 961,
	"endColumn": 24,
	"tags": [
		1
	],
	"modelVersionId": 146
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/utils/extract_export_duplicates.py",
	"owner": "Ruff",
	"code": {
		"value": "F841",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/unused-variable",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Local variable `timestamp_metadata` is assigned to but never used",
	"source": "Ruff",
	"startLineNumber": 966,
	"startColumn": 13,
	"endLineNumber": 966,
	"endColumn": 31,
	"tags": [
		1
	],
	"modelVersionId": 146
},{
	"resource": "/Users/deadcoast/milkvideo/remove_emojis.py",
	"owner": "Ruff",
	"code": {
		"value": "RUF039",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/unraw-re-pattern",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "First argument to `re.compile()` is not raw string",
	"source": "Ruff",
	"startLineNumber": 13,
	"startColumn": 5,
	"endLineNumber": 13,
	"endColumn": 28,
	"modelVersionId": 19
},{
	"resource": "/Users/deadcoast/milkvideo/remove_emojis.py",
	"owner": "Ruff",
	"code": {
		"value": "RUF039",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/unraw-re-pattern",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "First argument to `re.compile()` is not raw string",
	"source": "Ruff",
	"startLineNumber": 14,
	"startColumn": 5,
	"endLineNumber": 14,
	"endColumn": 28,
	"modelVersionId": 19
},{
	"resource": "/Users/deadcoast/milkvideo/remove_emojis.py",
	"owner": "Ruff",
	"code": {
		"value": "RUF039",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/unraw-re-pattern",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "First argument to `re.compile()` is not raw string",
	"source": "Ruff",
	"startLineNumber": 15,
	"startColumn": 5,
	"endLineNumber": 15,
	"endColumn": 28,
	"modelVersionId": 19
},{
	"resource": "/Users/deadcoast/milkvideo/remove_emojis.py",
	"owner": "Ruff",
	"code": {
		"value": "RUF039",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/unraw-re-pattern",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "First argument to `re.compile()` is not raw string",
	"source": "Ruff",
	"startLineNumber": 16,
	"startColumn": 5,
	"endLineNumber": 16,
	"endColumn": 28,
	"modelVersionId": 19
},{
	"resource": "/Users/deadcoast/milkvideo/remove_emojis.py",
	"owner": "Ruff",
	"code": {
		"value": "RUF039",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/unraw-re-pattern",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "First argument to `re.compile()` is not raw string",
	"source": "Ruff",
	"startLineNumber": 17,
	"startColumn": 5,
	"endLineNumber": 17,
	"endColumn": 28,
	"modelVersionId": 19
},{
	"resource": "/Users/deadcoast/milkvideo/remove_emojis.py",
	"owner": "Ruff",
	"code": {
		"value": "RUF039",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/unraw-re-pattern",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "First argument to `re.compile()` is not raw string",
	"source": "Ruff",
	"startLineNumber": 18,
	"startColumn": 5,
	"endLineNumber": 18,
	"endColumn": 28,
	"modelVersionId": 19
},{
	"resource": "/Users/deadcoast/milkvideo/remove_emojis.py",
	"owner": "Ruff",
	"code": {
		"value": "RUF039",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/unraw-re-pattern",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "First argument to `re.compile()` is not raw string",
	"source": "Ruff",
	"startLineNumber": 19,
	"startColumn": 5,
	"endLineNumber": 19,
	"endColumn": 28,
	"modelVersionId": 19
},{
	"resource": "/Users/deadcoast/milkvideo/remove_emojis.py",
	"owner": "Ruff",
	"code": {
		"value": "RUF039",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/unraw-re-pattern",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "First argument to `re.compile()` is not raw string",
	"source": "Ruff",
	"startLineNumber": 20,
	"startColumn": 5,
	"endLineNumber": 20,
	"endColumn": 28,
	"modelVersionId": 19
},{
	"resource": "/Users/deadcoast/milkvideo/remove_emojis.py",
	"owner": "Ruff",
	"code": {
		"value": "RUF039",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/unraw-re-pattern",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "First argument to `re.compile()` is not raw string",
	"source": "Ruff",
	"startLineNumber": 21,
	"startColumn": 5,
	"endLineNumber": 21,
	"endColumn": 28,
	"modelVersionId": 19
},{
	"resource": "/Users/deadcoast/milkvideo/remove_emojis.py",
	"owner": "Ruff",
	"code": {
		"value": "RUF039",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/unraw-re-pattern",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "First argument to `re.compile()` is not raw string",
	"source": "Ruff",
	"startLineNumber": 22,
	"startColumn": 5,
	"endLineNumber": 22,
	"endColumn": 28,
	"modelVersionId": 19
},{
	"resource": "/Users/deadcoast/milkvideo/remove_emojis.py",
	"owner": "Ruff",
	"code": {
		"value": "RUF039",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/unraw-re-pattern",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "First argument to `re.compile()` is not raw string",
	"source": "Ruff",
	"startLineNumber": 23,
	"startColumn": 5,
	"endLineNumber": 23,
	"endColumn": 28,
	"modelVersionId": 19
},{
	"resource": "/Users/deadcoast/milkvideo/remove_emojis.py",
	"owner": "Ruff",
	"code": {
		"value": "RUF039",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/unraw-re-pattern",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "First argument to `re.compile()` is not raw string",
	"source": "Ruff",
	"startLineNumber": 24,
	"startColumn": 5,
	"endLineNumber": 24,
	"endColumn": 17,
	"modelVersionId": 19
},{
	"resource": "/Users/deadcoast/milkvideo/remove_emojis.py",
	"owner": "Ruff",
	"code": {
		"value": "RUF039",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/unraw-re-pattern",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "First argument to `re.compile()` is not raw string",
	"source": "Ruff",
	"startLineNumber": 25,
	"startColumn": 5,
	"endLineNumber": 25,
	"endColumn": 17,
	"modelVersionId": 19
},{
	"resource": "/Users/deadcoast/milkvideo/remove_emojis.py",
	"owner": "Ruff",
	"code": {
		"value": "RUF039",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/unraw-re-pattern",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "First argument to `re.compile()` is not raw string",
	"source": "Ruff",
	"startLineNumber": 26,
	"startColumn": 5,
	"endLineNumber": 26,
	"endColumn": 17,
	"modelVersionId": 19
},{
	"resource": "/Users/deadcoast/milkvideo/remove_emojis.py",
	"owner": "Ruff",
	"code": {
		"value": "RUF039",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/unraw-re-pattern",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "First argument to `re.compile()` is not raw string",
	"source": "Ruff",
	"startLineNumber": 27,
	"startColumn": 5,
	"endLineNumber": 27,
	"endColumn": 28,
	"modelVersionId": 19
},{
	"resource": "/Users/deadcoast/milkvideo/remove_emojis.py",
	"owner": "Ruff",
	"code": {
		"value": "RUF039",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/unraw-re-pattern",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "First argument to `re.compile()` is not raw string",
	"source": "Ruff",
	"startLineNumber": 28,
	"startColumn": 5,
	"endLineNumber": 28,
	"endColumn": 28,
	"modelVersionId": 19
},{
	"resource": "/Users/deadcoast/milkvideo/remove_emojis.py",
	"owner": "Ruff",
	"code": {
		"value": "RUF039",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/unraw-re-pattern",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "First argument to `re.compile()` is not raw string",
	"source": "Ruff",
	"startLineNumber": 29,
	"startColumn": 5,
	"endLineNumber": 29,
	"endColumn": 17,
	"modelVersionId": 19
},{
	"resource": "/Users/deadcoast/milkvideo/remove_emojis.py",
	"owner": "Ruff",
	"code": {
		"value": "RUF039",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/unraw-re-pattern",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "First argument to `re.compile()` is not raw string",
	"source": "Ruff",
	"startLineNumber": 30,
	"startColumn": 5,
	"endLineNumber": 30,
	"endColumn": 17,
	"modelVersionId": 19
},{
	"resource": "/Users/deadcoast/milkvideo/remove_emojis.py",
	"owner": "Ruff",
	"code": {
		"value": "RUF039",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/unraw-re-pattern",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "First argument to `re.compile()` is not raw string",
	"source": "Ruff",
	"startLineNumber": 31,
	"startColumn": 5,
	"endLineNumber": 31,
	"endColumn": 28,
	"modelVersionId": 19
},{
	"resource": "/Users/deadcoast/milkvideo/remove_emojis.py",
	"owner": "Ruff",
	"code": {
		"value": "RUF039",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/unraw-re-pattern",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "First argument to `re.compile()` is not raw string",
	"source": "Ruff",
	"startLineNumber": 32,
	"startColumn": 5,
	"endLineNumber": 32,
	"endColumn": 17,
	"modelVersionId": 19
},{
	"resource": "/Users/deadcoast/milkvideo/remove_emojis.py",
	"owner": "Ruff",
	"code": {
		"value": "RUF039",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/unraw-re-pattern",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "First argument to `re.compile()` is not raw string",
	"source": "Ruff",
	"startLineNumber": 33,
	"startColumn": 5,
	"endLineNumber": 33,
	"endColumn": 28,
	"modelVersionId": 19
},{
	"resource": "/Users/deadcoast/milkvideo/remove_emojis.py",
	"owner": "Ruff",
	"code": {
		"value": "RUF039",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/unraw-re-pattern",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "First argument to `re.compile()` is not raw string",
	"source": "Ruff",
	"startLineNumber": 34,
	"startColumn": 5,
	"endLineNumber": 34,
	"endColumn": 28,
	"modelVersionId": 19
},{
	"resource": "/Users/deadcoast/milkvideo/remove_emojis.py",
	"owner": "Ruff",
	"code": {
		"value": "RUF039",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/unraw-re-pattern",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "First argument to `re.compile()` is not raw string",
	"source": "Ruff",
	"startLineNumber": 35,
	"startColumn": 5,
	"endLineNumber": 35,
	"endColumn": 28,
	"modelVersionId": 19
},{
	"resource": "/Users/deadcoast/milkvideo/remove_emojis.py",
	"owner": "Ruff",
	"code": {
		"value": "RUF039",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/unraw-re-pattern",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "First argument to `re.compile()` is not raw string",
	"source": "Ruff",
	"startLineNumber": 36,
	"startColumn": 5,
	"endLineNumber": 36,
	"endColumn": 28,
	"modelVersionId": 19
},{
	"resource": "/Users/deadcoast/milkvideo/remove_emojis.py",
	"owner": "Ruff",
	"code": {
		"value": "RUF039",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/unraw-re-pattern",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "First argument to `re.compile()` is not raw string",
	"source": "Ruff",
	"startLineNumber": 37,
	"startColumn": 5,
	"endLineNumber": 37,
	"endColumn": 28,
	"modelVersionId": 19
},{
	"resource": "/Users/deadcoast/milkvideo/remove_emojis.py",
	"owner": "Ruff",
	"code": {
		"value": "RUF039",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/unraw-re-pattern",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "First argument to `re.compile()` is not raw string",
	"source": "Ruff",
	"startLineNumber": 38,
	"startColumn": 5,
	"endLineNumber": 38,
	"endColumn": 28,
	"modelVersionId": 19
},{
	"resource": "/Users/deadcoast/milkvideo/remove_emojis.py",
	"owner": "Ruff",
	"code": {
		"value": "RUF039",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/unraw-re-pattern",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "First argument to `re.compile()` is not raw string",
	"source": "Ruff",
	"startLineNumber": 39,
	"startColumn": 5,
	"endLineNumber": 39,
	"endColumn": 28,
	"modelVersionId": 19
},{
	"resource": "/Users/deadcoast/milkvideo/remove_emojis.py",
	"owner": "Ruff",
	"code": {
		"value": "RUF039",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/unraw-re-pattern",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "First argument to `re.compile()` is not raw string",
	"source": "Ruff",
	"startLineNumber": 40,
	"startColumn": 5,
	"endLineNumber": 40,
	"endColumn": 17,
	"modelVersionId": 19
},{
	"resource": "/Users/deadcoast/milkvideo/remove_emojis.py",
	"owner": "Ruff",
	"code": {
		"value": "RUF039",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/unraw-re-pattern",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "First argument to `re.compile()` is not raw string",
	"source": "Ruff",
	"startLineNumber": 41,
	"startColumn": 5,
	"endLineNumber": 41,
	"endColumn": 28,
	"modelVersionId": 19
},{
	"resource": "/Users/deadcoast/milkvideo/remove_emojis.py",
	"owner": "Ruff",
	"code": {
		"value": "RUF039",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/unraw-re-pattern",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "First argument to `re.compile()` is not raw string",
	"source": "Ruff",
	"startLineNumber": 42,
	"startColumn": 5,
	"endLineNumber": 42,
	"endColumn": 28,
	"modelVersionId": 19
},{
	"resource": "/Users/deadcoast/milkvideo/remove_emojis.py",
	"owner": "Ruff",
	"code": {
		"value": "RUF039",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/unraw-re-pattern",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "First argument to `re.compile()` is not raw string",
	"source": "Ruff",
	"startLineNumber": 43,
	"startColumn": 5,
	"endLineNumber": 43,
	"endColumn": 17,
	"modelVersionId": 19
},{
	"resource": "/Users/deadcoast/milkvideo/remove_emojis.py",
	"owner": "Ruff",
	"code": {
		"value": "RUF039",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/unraw-re-pattern",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "First argument to `re.compile()` is not raw string",
	"source": "Ruff",
	"startLineNumber": 44,
	"startColumn": 5,
	"endLineNumber": 44,
	"endColumn": 28,
	"modelVersionId": 19
},{
	"resource": "/Users/deadcoast/milkvideo/remove_emojis.py",
	"owner": "Ruff",
	"code": {
		"value": "RUF039",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/unraw-re-pattern",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "First argument to `re.compile()` is not raw string",
	"source": "Ruff",
	"startLineNumber": 45,
	"startColumn": 5,
	"endLineNumber": 45,
	"endColumn": 28,
	"modelVersionId": 19
},{
	"resource": "/Users/deadcoast/milkvideo/remove_emojis.py",
	"owner": "Ruff",
	"code": {
		"value": "RUF039",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/unraw-re-pattern",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "First argument to `re.compile()` is not raw string",
	"source": "Ruff",
	"startLineNumber": 46,
	"startColumn": 5,
	"endLineNumber": 46,
	"endColumn": 28,
	"modelVersionId": 19
},{
	"resource": "/Users/deadcoast/milkvideo/remove_emojis.py",
	"owner": "Ruff",
	"code": {
		"value": "RUF039",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/unraw-re-pattern",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "First argument to `re.compile()` is not raw string",
	"source": "Ruff",
	"startLineNumber": 47,
	"startColumn": 5,
	"endLineNumber": 47,
	"endColumn": 28,
	"modelVersionId": 19
},{
	"resource": "/Users/deadcoast/milkvideo/remove_emojis.py",
	"owner": "Ruff",
	"code": {
		"value": "RUF039",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/unraw-re-pattern",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "First argument to `re.compile()` is not raw string",
	"source": "Ruff",
	"startLineNumber": 48,
	"startColumn": 5,
	"endLineNumber": 48,
	"endColumn": 17,
	"modelVersionId": 19
},{
	"resource": "/Users/deadcoast/milkvideo/remove_emojis.py",
	"owner": "Ruff",
	"code": {
		"value": "RUF039",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/unraw-re-pattern",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "First argument to `re.compile()` is not raw string",
	"source": "Ruff",
	"startLineNumber": 49,
	"startColumn": 5,
	"endLineNumber": 49,
	"endColumn": 28,
	"modelVersionId": 19
},{
	"resource": "/Users/deadcoast/milkvideo/remove_emojis.py",
	"owner": "Ruff",
	"code": {
		"value": "RUF039",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/unraw-re-pattern",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "First argument to `re.compile()` is not raw string",
	"source": "Ruff",
	"startLineNumber": 50,
	"startColumn": 5,
	"endLineNumber": 50,
	"endColumn": 17,
	"modelVersionId": 19
},{
	"resource": "/Users/deadcoast/milkvideo/remove_emojis.py",
	"owner": "Ruff",
	"code": {
		"value": "RUF039",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/unraw-re-pattern",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "First argument to `re.compile()` is not raw string",
	"source": "Ruff",
	"startLineNumber": 51,
	"startColumn": 5,
	"endLineNumber": 51,
	"endColumn": 28,
	"modelVersionId": 19
},{
	"resource": "/Users/deadcoast/milkvideo/remove_emojis.py",
	"owner": "Ruff",
	"code": {
		"value": "ANN201",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/missing-return-type-undocumented-public-function",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Missing return type annotation for public function `process_file`",
	"source": "Ruff",
	"startLineNumber": 61,
	"startColumn": 5,
	"endLineNumber": 61,
	"endColumn": 17,
	"modelVersionId": 19
},{
	"resource": "/Users/deadcoast/milkvideo/remove_emojis.py",
	"owner": "Ruff",
	"code": {
		"value": "UP015",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/redundant-open-modes",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Unnecessary mode argument",
	"source": "Ruff",
	"startLineNumber": 64,
	"startColumn": 30,
	"endLineNumber": 64,
	"endColumn": 33,
	"modelVersionId": 19
},{
	"resource": "/Users/deadcoast/milkvideo/setup.py",
	"owner": "Ruff",
	"code": {
		"value": "UP015",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/redundant-open-modes",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Unnecessary mode argument",
	"source": "Ruff",
	"startLineNumber": 12,
	"startColumn": 28,
	"endLineNumber": 12,
	"endColumn": 31,
	"modelVersionId": 4
},{
	"resource": "/Users/deadcoast/milkvideo/setup.py",
	"owner": "Ruff",
	"code": {
		"value": "UP015",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/redundant-open-modes",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Unnecessary mode argument",
	"source": "Ruff",
	"startLineNumber": 18,
	"startColumn": 35,
	"endLineNumber": 18,
	"endColumn": 38,
	"modelVersionId": 4
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/input_handler.py",
	"owner": "Ruff",
	"code": {
		"value": "UP035",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/deprecated-import",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "`typing.List` is deprecated, use `list` instead",
	"source": "Ruff",
	"startLineNumber": 5,
	"startColumn": 1,
	"endLineNumber": 5,
	"endColumn": 24,
	"modelVersionId": 6
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/input_handler.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 51,
	"startColumn": 50,
	"endLineNumber": 51,
	"endColumn": 54,
	"modelVersionId": 6
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/input_handler.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 67,
	"startColumn": 52,
	"endLineNumber": 67,
	"endColumn": 56,
	"modelVersionId": 6
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/input_handler.py",
	"owner": "Ruff",
	"code": {
		"value": "UP015",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/redundant-open-modes",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Unnecessary mode argument",
	"source": "Ruff",
	"startLineNumber": 70,
	"startColumn": 34,
	"endLineNumber": 70,
	"endColumn": 37,
	"modelVersionId": 6
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/input_handler.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 91,
	"startColumn": 54,
	"endLineNumber": 91,
	"endColumn": 67,
	"modelVersionId": 6
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/input_handler.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 109,
	"startColumn": 56,
	"endLineNumber": 109,
	"endColumn": 69,
	"modelVersionId": 6
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/input_handler.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 117,
	"startColumn": 43,
	"endLineNumber": 117,
	"endColumn": 56,
	"modelVersionId": 6
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/input_handler.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 117,
	"startColumn": 76,
	"endLineNumber": 117,
	"endColumn": 89,
	"modelVersionId": 6
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/input_handler.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 118,
	"startColumn": 10,
	"endLineNumber": 118,
	"endColumn": 23,
	"modelVersionId": 6
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/input_handler.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 130,
	"startColumn": 55,
	"endLineNumber": 130,
	"endColumn": 69,
	"modelVersionId": 6
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/input_handler.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 144,
	"startColumn": 74,
	"endLineNumber": 144,
	"endColumn": 78,
	"modelVersionId": 6
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/cli/input_handler.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 185,
	"startColumn": 52,
	"endLineNumber": 185,
	"endColumn": 65,
	"modelVersionId": 6
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/config/config_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP035",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/deprecated-import",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "`typing.Dict` is deprecated, use `dict` instead",
	"source": "Ruff",
	"startLineNumber": 8,
	"startColumn": 1,
	"endLineNumber": 8,
	"endColumn": 24,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/config/config_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP035",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/deprecated-import",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "`typing.List` is deprecated, use `list` instead",
	"source": "Ruff",
	"startLineNumber": 9,
	"startColumn": 1,
	"endLineNumber": 9,
	"endColumn": 24,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/config/config_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP035",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/deprecated-import",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "`typing.Tuple` is deprecated, use `tuple` instead",
	"source": "Ruff",
	"startLineNumber": 11,
	"startColumn": 1,
	"endLineNumber": 11,
	"endColumn": 25,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/config/config_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "ANN204",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/missing-return-type-special-method",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Missing return type annotation for special method `__init__`",
	"source": "Ruff",
	"startLineNumber": 20,
	"startColumn": 9,
	"endLineNumber": 20,
	"endColumn": 17,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/config/config_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 20,
	"startColumn": 36,
	"endLineNumber": 20,
	"endColumn": 50,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/config/config_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 25,
	"startColumn": 24,
	"endLineNumber": 25,
	"endColumn": 42,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/config/config_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 37,
	"startColumn": 40,
	"endLineNumber": 37,
	"endColumn": 54,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/config/config_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP015",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/redundant-open-modes",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Unnecessary mode argument",
	"source": "Ruff",
	"startLineNumber": 44,
	"startColumn": 36,
	"endLineNumber": 44,
	"endColumn": 39,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/config/config_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 64,
	"startColumn": 40,
	"endLineNumber": 64,
	"endColumn": 54,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/config/config_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 99,
	"startColumn": 37,
	"endLineNumber": 99,
	"endColumn": 41,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/config/config_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 99,
	"startColumn": 56,
	"endLineNumber": 99,
	"endColumn": 60,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/config/config_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 113,
	"startColumn": 40,
	"endLineNumber": 113,
	"endColumn": 44,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/config/config_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 113,
	"startColumn": 59,
	"endLineNumber": 113,
	"endColumn": 63,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/config/config_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "ANN401",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/any-type",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Dynamically typed expressions (typing.Any) are disallowed in `default`",
	"source": "Ruff",
	"startLineNumber": 125,
	"startColumn": 46,
	"endLineNumber": 125,
	"endColumn": 49,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/config/config_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "ANN401",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/any-type",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Dynamically typed expressions (typing.Any) are disallowed in `get_setting`",
	"source": "Ruff",
	"startLineNumber": 125,
	"startColumn": 61,
	"endLineNumber": 125,
	"endColumn": 64,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/config/config_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "ANN401",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/any-type",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Dynamically typed expressions (typing.Any) are disallowed in `value`",
	"source": "Ruff",
	"startLineNumber": 142,
	"startColumn": 44,
	"endLineNumber": 142,
	"endColumn": 47,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/config/config_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP015",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/redundant-open-modes",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Unnecessary mode argument",
	"source": "Ruff",
	"startLineNumber": 178,
	"startColumn": 32,
	"endLineNumber": 178,
	"endColumn": 35,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/config/config_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 187,
	"startColumn": 41,
	"endLineNumber": 187,
	"endColumn": 59,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/config/config_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `tuple` instead of `Tuple` for type annotation",
	"source": "Ruff",
	"startLineNumber": 187,
	"startColumn": 71,
	"endLineNumber": 187,
	"endColumn": 76,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/config/config_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 187,
	"startColumn": 83,
	"endLineNumber": 187,
	"endColumn": 87,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/config/config_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "ANN001",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/missing-type-function-argument",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Missing type annotation for function argument `download_settings`",
	"source": "Ruff",
	"startLineNumber": 214,
	"startColumn": 43,
	"endLineNumber": 214,
	"endColumn": 60,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/config/config_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 214,
	"startColumn": 65,
	"endLineNumber": 214,
	"endColumn": 69,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/config/config_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "ANN001",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/missing-type-function-argument",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Missing type annotation for function argument `ui_settings`",
	"source": "Ruff",
	"startLineNumber": 260,
	"startColumn": 37,
	"endLineNumber": 260,
	"endColumn": 48,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/config/config_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 260,
	"startColumn": 53,
	"endLineNumber": 260,
	"endColumn": 57,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/config/config_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "ANN001",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/missing-type-function-argument",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Missing type annotation for function argument `history_settings`",
	"source": "Ruff",
	"startLineNumber": 283,
	"startColumn": 42,
	"endLineNumber": 283,
	"endColumn": 58,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/config/config_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 283,
	"startColumn": 63,
	"endLineNumber": 283,
	"endColumn": 67,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/config/config_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "ANN001",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/missing-type-function-argument",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Missing type annotation for function argument `advanced_settings`",
	"source": "Ruff",
	"startLineNumber": 309,
	"startColumn": 43,
	"endLineNumber": 309,
	"endColumn": 60,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/config/config_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 309,
	"startColumn": 65,
	"endLineNumber": 309,
	"endColumn": 69,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/config/config_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "ANN001",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/missing-type-function-argument",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Missing type annotation for function argument `format_settings`",
	"source": "Ruff",
	"startLineNumber": 333,
	"startColumn": 41,
	"endLineNumber": 333,
	"endColumn": 56,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/config/config_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 333,
	"startColumn": 61,
	"endLineNumber": 333,
	"endColumn": 65,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/config/config_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "E501",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/line-too-long",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Line too long (128 > 120)",
	"source": "Ruff",
	"startLineNumber": 353,
	"startColumn": 121,
	"endLineNumber": 353,
	"endColumn": 129,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/config/config_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "E501",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/line-too-long",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Line too long (128 > 120)",
	"source": "Ruff",
	"startLineNumber": 360,
	"startColumn": 121,
	"endLineNumber": 360,
	"endColumn": 129,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/config/config_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "ANN001",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/missing-type-function-argument",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Missing type annotation for function argument `post_processing_settings`",
	"source": "Ruff",
	"startLineNumber": 377,
	"startColumn": 50,
	"endLineNumber": 377,
	"endColumn": 74,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/config/config_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 377,
	"startColumn": 79,
	"endLineNumber": 377,
	"endColumn": 83,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/config/config_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "E501",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/line-too-long",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Line too long (135 > 120)",
	"source": "Ruff",
	"startLineNumber": 385,
	"startColumn": 121,
	"endLineNumber": 385,
	"endColumn": 136,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/config/config_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "E501",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/line-too-long",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Line too long (137 > 120)",
	"source": "Ruff",
	"startLineNumber": 396,
	"startColumn": 121,
	"endLineNumber": 396,
	"endColumn": 138,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/config/config_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 401,
	"startColumn": 41,
	"endLineNumber": 401,
	"endColumn": 59,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/config/config_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `tuple` instead of `Tuple` for type annotation",
	"source": "Ruff",
	"startLineNumber": 401,
	"startColumn": 71,
	"endLineNumber": 401,
	"endColumn": 76,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/config/config_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 401,
	"startColumn": 83,
	"endLineNumber": 401,
	"endColumn": 87,
	"modelVersionId": 7
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/config/settings.py",
	"owner": "Ruff",
	"code": {
		"value": "UP035",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/deprecated-import",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "`typing.List` is deprecated, use `list` instead",
	"source": "Ruff",
	"startLineNumber": 5,
	"startColumn": 1,
	"endLineNumber": 5,
	"endColumn": 24,
	"modelVersionId": 5
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/config/settings.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 85,
	"startColumn": 18,
	"endLineNumber": 85,
	"endColumn": 22,
	"modelVersionId": 5
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/config/settings.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 107,
	"startColumn": 20,
	"endLineNumber": 107,
	"endColumn": 24,
	"modelVersionId": 5
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/config/settings.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 108,
	"startColumn": 20,
	"endLineNumber": 108,
	"endColumn": 24,
	"modelVersionId": 5
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/config/settings.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 127,
	"startColumn": 22,
	"endLineNumber": 127,
	"endColumn": 26,
	"modelVersionId": 5
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/config/settings.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 128,
	"startColumn": 24,
	"endLineNumber": 128,
	"endColumn": 28,
	"modelVersionId": 5
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/config/settings.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 129,
	"startColumn": 26,
	"endLineNumber": 129,
	"endColumn": 30,
	"modelVersionId": 5
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/config/settings.py",
	"owner": "Ruff",
	"code": {
		"value": "UP015",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/redundant-open-modes",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Unnecessary mode argument",
	"source": "Ruff",
	"startLineNumber": 150,
	"startColumn": 34,
	"endLineNumber": 150,
	"endColumn": 37,
	"modelVersionId": 5
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/config/settings.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 233,
	"startColumn": 30,
	"endLineNumber": 233,
	"endColumn": 44,
	"modelVersionId": 5
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/file_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP035",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/deprecated-import",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "`typing.Dict` is deprecated, use `dict` instead",
	"source": "Ruff",
	"startLineNumber": 11,
	"startColumn": 1,
	"endLineNumber": 11,
	"endColumn": 24,
	"modelVersionId": 9
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/file_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP035",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/deprecated-import",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "`typing.List` is deprecated, use `list` instead",
	"source": "Ruff",
	"startLineNumber": 12,
	"startColumn": 1,
	"endLineNumber": 12,
	"endColumn": 24,
	"modelVersionId": 9
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/file_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "ANN204",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/missing-return-type-special-method",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Missing return type annotation for special method `__init__`",
	"source": "Ruff",
	"startLineNumber": 24,
	"startColumn": 9,
	"endLineNumber": 24,
	"endColumn": 17,
	"modelVersionId": 9
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/file_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 34,
	"startColumn": 36,
	"endLineNumber": 34,
	"endColumn": 54,
	"modelVersionId": 9
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/file_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 45,
	"startColumn": 38,
	"endLineNumber": 45,
	"endColumn": 56,
	"modelVersionId": 9
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/file_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 68,
	"startColumn": 61,
	"endLineNumber": 68,
	"endColumn": 79,
	"modelVersionId": 9
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/file_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 121,
	"startColumn": 61,
	"endLineNumber": 121,
	"endColumn": 65,
	"modelVersionId": 9
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/file_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 137,
	"startColumn": 56,
	"endLineNumber": 137,
	"endColumn": 60,
	"modelVersionId": 9
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/file_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 137,
	"startColumn": 76,
	"endLineNumber": 137,
	"endColumn": 80,
	"modelVersionId": 9
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/file_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 137,
	"startColumn": 81,
	"endLineNumber": 137,
	"endColumn": 85,
	"modelVersionId": 9
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/file_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 167,
	"startColumn": 36,
	"endLineNumber": 167,
	"endColumn": 50,
	"modelVersionId": 9
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/file_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 167,
	"startColumn": 62,
	"endLineNumber": 167,
	"endColumn": 66,
	"modelVersionId": 9
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/file_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 185,
	"startColumn": 58,
	"endLineNumber": 185,
	"endColumn": 72,
	"modelVersionId": 9
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/file_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 203,
	"startColumn": 38,
	"endLineNumber": 203,
	"endColumn": 52,
	"modelVersionId": 9
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/file_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 203,
	"startColumn": 88,
	"endLineNumber": 203,
	"endColumn": 92,
	"modelVersionId": 9
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/file_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 203,
	"startColumn": 93,
	"endLineNumber": 203,
	"endColumn": 97,
	"modelVersionId": 9
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/file_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 241,
	"startColumn": 70,
	"endLineNumber": 241,
	"endColumn": 84,
	"modelVersionId": 9
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/file_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 264,
	"startColumn": 63,
	"endLineNumber": 264,
	"endColumn": 77,
	"modelVersionId": 9
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/file_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 282,
	"startColumn": 57,
	"endLineNumber": 282,
	"endColumn": 71,
	"modelVersionId": 9
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/file_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 318,
	"startColumn": 23,
	"endLineNumber": 318,
	"endColumn": 37,
	"modelVersionId": 9
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/file_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 319,
	"startColumn": 10,
	"endLineNumber": 319,
	"endColumn": 14,
	"modelVersionId": 9
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/file_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 319,
	"startColumn": 20,
	"endLineNumber": 319,
	"endColumn": 24,
	"modelVersionId": 9
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/file_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 319,
	"startColumn": 25,
	"endLineNumber": 319,
	"endColumn": 29,
	"modelVersionId": 9
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/file_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 324,
	"startColumn": 22,
	"endLineNumber": 324,
	"endColumn": 26,
	"modelVersionId": 9
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/file_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 324,
	"startColumn": 32,
	"endLineNumber": 324,
	"endColumn": 36,
	"modelVersionId": 9
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/file_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 324,
	"startColumn": 37,
	"endLineNumber": 324,
	"endColumn": 41,
	"modelVersionId": 9
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/file_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 354,
	"startColumn": 23,
	"endLineNumber": 354,
	"endColumn": 37,
	"modelVersionId": 9
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/file_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 355,
	"startColumn": 10,
	"endLineNumber": 355,
	"endColumn": 14,
	"modelVersionId": 9
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/file_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 355,
	"startColumn": 20,
	"endLineNumber": 355,
	"endColumn": 24,
	"modelVersionId": 9
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/file_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 355,
	"startColumn": 25,
	"endLineNumber": 355,
	"endColumn": 29,
	"modelVersionId": 9
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/file_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 360,
	"startColumn": 22,
	"endLineNumber": 360,
	"endColumn": 26,
	"modelVersionId": 9
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/file_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 360,
	"startColumn": 32,
	"endLineNumber": 360,
	"endColumn": 36,
	"modelVersionId": 9
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/file_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 360,
	"startColumn": 37,
	"endLineNumber": 360,
	"endColumn": 41,
	"modelVersionId": 9
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/file_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 376,
	"startColumn": 23,
	"endLineNumber": 376,
	"endColumn": 37,
	"modelVersionId": 9
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/file_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 377,
	"startColumn": 10,
	"endLineNumber": 377,
	"endColumn": 14,
	"modelVersionId": 9
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/file_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 377,
	"startColumn": 15,
	"endLineNumber": 377,
	"endColumn": 19,
	"modelVersionId": 9
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/file_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "B007",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/unused-loop-control-variable",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Loop control variable `j` not used within loop body",
	"source": "Ruff",
	"startLineNumber": 387,
	"startColumn": 17,
	"endLineNumber": 387,
	"endColumn": 18,
	"modelVersionId": 9
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/file_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 470,
	"startColumn": 27,
	"endLineNumber": 470,
	"endColumn": 31,
	"modelVersionId": 9
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/file_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 470,
	"startColumn": 37,
	"endLineNumber": 470,
	"endColumn": 41,
	"modelVersionId": 9
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/file_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 470,
	"startColumn": 42,
	"endLineNumber": 470,
	"endColumn": 46,
	"modelVersionId": 9
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/file_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 471,
	"startColumn": 10,
	"endLineNumber": 471,
	"endColumn": 14,
	"modelVersionId": 9
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/file_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 512,
	"startColumn": 39,
	"endLineNumber": 512,
	"endColumn": 53,
	"modelVersionId": 9
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/file_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 512,
	"startColumn": 99,
	"endLineNumber": 512,
	"endColumn": 103,
	"modelVersionId": 9
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/file_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 512,
	"startColumn": 104,
	"endLineNumber": 512,
	"endColumn": 108,
	"modelVersionId": 9
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/file_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 526,
	"startColumn": 37,
	"endLineNumber": 526,
	"endColumn": 51,
	"modelVersionId": 9
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/file_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 526,
	"startColumn": 89,
	"endLineNumber": 526,
	"endColumn": 93,
	"modelVersionId": 9
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/file_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 526,
	"startColumn": 94,
	"endLineNumber": 526,
	"endColumn": 98,
	"modelVersionId": 9
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/file_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 540,
	"startColumn": 45,
	"endLineNumber": 540,
	"endColumn": 59,
	"modelVersionId": 9
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/file_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `list` instead of `List` for type annotation",
	"source": "Ruff",
	"startLineNumber": 540,
	"startColumn": 71,
	"endLineNumber": 540,
	"endColumn": 75,
	"modelVersionId": 9
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/file_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "B007",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/unused-loop-control-variable",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Loop control variable `files` not used within loop body",
	"source": "Ruff",
	"startLineNumber": 549,
	"startColumn": 29,
	"endLineNumber": 549,
	"endColumn": 34,
	"modelVersionId": 9
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/file_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 566,
	"startColumn": 30,
	"endLineNumber": 566,
	"endColumn": 44,
	"modelVersionId": 9
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/file_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 566,
	"startColumn": 72,
	"endLineNumber": 566,
	"endColumn": 96,
	"modelVersionId": 9
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/file_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 566,
	"startColumn": 81,
	"endLineNumber": 566,
	"endColumn": 85,
	"modelVersionId": 9
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/file_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 567,
	"startColumn": 10,
	"endLineNumber": 567,
	"endColumn": 14,
	"modelVersionId": 9
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/file_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 615,
	"startColumn": 45,
	"endLineNumber": 615,
	"endColumn": 59,
	"modelVersionId": 9
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/file_manager.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 615,
	"startColumn": 71,
	"endLineNumber": 615,
	"endColumn": 75,
	"modelVersionId": 9
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/progress_tracker.py",
	"owner": "Ruff",
	"code": {
		"value": "UP035",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/deprecated-import",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Import from `collections.abc` instead: `Callable`",
	"source": "Ruff",
	"startLineNumber": 7,
	"startColumn": 1,
	"endLineNumber": 7,
	"endColumn": 28,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/progress_tracker.py",
	"owner": "Ruff",
	"code": {
		"value": "UP035",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/deprecated-import",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "`typing.Dict` is deprecated, use `dict` instead",
	"source": "Ruff",
	"startLineNumber": 8,
	"startColumn": 1,
	"endLineNumber": 8,
	"endColumn": 24,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/progress_tracker.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 31,
	"startColumn": 10,
	"endLineNumber": 31,
	"endColumn": 25,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/progress_tracker.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 35,
	"startColumn": 17,
	"endLineNumber": 35,
	"endColumn": 35,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/progress_tracker.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 36,
	"startColumn": 15,
	"endLineNumber": 36,
	"endColumn": 33,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/progress_tracker.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 37,
	"startColumn": 12,
	"endLineNumber": 37,
	"endColumn": 25,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/progress_tracker.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 44,
	"startColumn": 27,
	"endLineNumber": 44,
	"endColumn": 46,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/progress_tracker.py",
	"owner": "Ruff",
	"code": {
		"value": "ANN204",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/missing-return-type-special-method",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Missing return type annotation for special method `__init__`",
	"source": "Ruff",
	"startLineNumber": 72,
	"startColumn": 9,
	"endLineNumber": 72,
	"endColumn": 17,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/progress_tracker.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 72,
	"startColumn": 33,
	"endLineNumber": 72,
	"endColumn": 50,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/progress_tracker.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 75,
	"startColumn": 25,
	"endLineNumber": 75,
	"endColumn": 29,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/progress_tracker.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 76,
	"startColumn": 25,
	"endLineNumber": 76,
	"endColumn": 29,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/progress_tracker.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 77,
	"startColumn": 28,
	"endLineNumber": 77,
	"endColumn": 42,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/progress_tracker.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 78,
	"startColumn": 29,
	"endLineNumber": 78,
	"endColumn": 47,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/progress_tracker.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 89,
	"startColumn": 14,
	"endLineNumber": 89,
	"endColumn": 29,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/progress_tracker.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 107,
	"startColumn": 80,
	"endLineNumber": 107,
	"endColumn": 93,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/progress_tracker.py",
	"owner": "Ruff",
	"code": {
		"value": "UP045",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep604-annotation-optional",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `X | None` for type annotations",
	"source": "Ruff",
	"startLineNumber": 116,
	"startColumn": 49,
	"endLineNumber": 116,
	"endColumn": 75,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/progress_tracker.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 120,
	"startColumn": 36,
	"endLineNumber": 120,
	"endColumn": 40,
	"modelVersionId": 8
},{
	"resource": "/Users/deadcoast/milkvideo/src/videomilker/core/progress_tracker.py",
	"owner": "Ruff",
	"code": {
		"value": "UP006",
		"target": {
			"$mid": 1,
			"path": "/ruff/rules/non-pep585-annotation",
			"scheme": "https",
			"authority": "docs.astral.sh"
		}
	},
	"severity": 4,
	"message": "Use `dict` instead of `Dict` for type annotation",
	"source": "Ruff",
	"startLineNumber": 292,
	"startColumn": 33,
	"endLineNumber": 292,
	"endColumn": 37,
	"modelVersionId": 8
}]
