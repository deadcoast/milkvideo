[build-system]
requires = ["setuptools>=65.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "videomilker"
dynamic = ["version"]
description = "An intuitive, tree-structured CLI interface for yt-dlp with visual feedback"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
authors = [
    {name = "VideoMilker Team", email = "team@videomilker.com"}
]
maintainers = [
    {name = "VideoMilker Team", email = "team@videomilker.com"}
]
keywords = [
    "video", 
    "download", 
    "cli", 
    "yt-dlp", 
    "youtube", 
    "rich", 
    "terminal-ui", 
    "batch-download",
    "media-downloader"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Multimedia :: Video",
    "Topic :: System :: Archiving",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
    "Environment :: Console",
    "Framework :: Click",
]

dependencies = [
    # Core dependencies
    "rich>=13.0.0",
    "click>=8.0.0",
    "pydantic>=2.0.0",
    "typer>=0.9.0",
    "python-slugify>=8.0.0",
    "tqdm>=4.65.0",
    
    # Video downloading
    "yt-dlp>=2023.12.30",
    
    # Network and media processing
    "requests>=2.31.0",
    "websockets>=12.0",
    "brotli>=1.1.0",
    "certifi>=2023.11.17",
    "ffprobe",
    "ffmpeg",
    "curl_cffi>=0.5.0",
    "mutagen>=1.47.0",
    "xattr>=0.10.1",
    "pycryptodomex>=3.19.0",
    "secretstorage>=3.3.3",
    
    # Database and data handling
    "pathlib2>=2.3.7",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]

test = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.10.0",
    "pytest-asyncio>=0.21.0",
]

docs = [
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "myst-parser>=1.0.0",
]

all = [
    "videomilker[dev,test,docs]",
]

[project.urls]
Homepage = "https://github.com/videomilker/videomilker"
Documentation = "https://videomilker.readthedocs.io/"
Repository = "https://github.com/videomilker/videomilker.git"
"Bug Tracker" = "https://github.com/videomilker/videomilker/issues"
"Source Code" = "https://github.com/videomilker/videomilker"
Changelog = "https://github.com/videomilker/videomilker/blob/main/CHANGELOG.md"

[project.scripts]
vmx = "videomilker.main:main"
videomilker = "videomilker.main:main"
vm = "videomilker.main:main"

[project.gui-scripts]
videomilker-gui = "videomilker.gui:main"

[tool.setuptools.dynamic]
version = {attr = "videomilker.version.__version__"}

[tool.setuptools.packages.find]
where = ["src"]
include = ["videomilker*"]
exclude = ["tests*", "docs*"]

[tool.setuptools.package-data]
videomilker = ["py.typed"]

[tool.setuptools.exclude-package-data]
"*" = ["*.pyc", "*.pyo", "*.pyd", "__pycache__", "*.so"]

# Code formatting
[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
skip = [".venv", "build", "dist"]

# Testing
[tool.pytest.ini_options]
testpaths = ["tests", "test_*.py"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--strict-config",
    "--cov=src/videomilker",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

# Type checking
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "yt_dlp.*",
    "rich.*",
    "click.*",
    "pydantic.*",
    "typer.*",
    "tqdm.*",
    "requests.*",
    "websockets.*",
    "brotli.*",
    "certifi.*",
    "ffprobe.*",
    "ffmpeg.*",
    "curl_cffi.*",
    "mutagen.*",
    "xattr.*",
    "pycryptodomex.*",
    "secretstorage.*",
    "pathlib2.*",
]
ignore_missing_imports = true

# Coverage
[tool.coverage.run]
source = ["src/videomilker"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# Pre-commit hooks
[tool.pre-commit.ci]
autofix_commit_msg = "style: auto fixes from pre-commit hooks"
autoupdate_commit_msg = "ci: pre-commit autoupdate"

# Documentation
[tool.sphinx]
project = "VideoMilker"
copyright = "2024, VideoMilker Team"
author = "VideoMilker Team"
version = "1.0.0"
release = "1.0.0"
extensions = [
    "sphinx.ext.autodoc",
    "sphinx.ext.napoleon",
    "sphinx.ext.viewcode",
    "sphinx.ext.intersphinx",
    "myst_parser",
]
templates_path = ["_templates"]
exclude_patterns = ["_build", "Thumbs.db", ".DS_Store"]
html_theme = "sphinx_rtd_theme"
html_static_path = ["_static"]

# Ruff (alternative to flake8)
[tool.ruff]
target-version = "py38"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["B011"]

# Bandit security
[tool.bandit]
exclude_dirs = ["tests", "test_*"]
skips = ["B101", "B601"]

# Safety
[tool.safety]
output = "json"
