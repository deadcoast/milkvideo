[build-system]
requires = ["setuptools>=65.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "videomilker"
dynamic = ["version"]
description = "An intuitive, tree-structured CLI interface for yt-dlp with visual feedback"
readme = "README.md"
requires-python = ">=3.8"
keywords = [
    "video",
    "download",
    "cli",
    "yt-dlp",
    "youtube",
    "rich",
    "terminal-ui",
    "batch-download",
    "media-downloader"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: End Users/Desktop",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Multimedia :: Video",
    "Topic :: System :: Archiving",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
    "Environment :: Console",
    "Framework :: Click"
]
dependencies = [
    "rich>=13.0.0",
    "click>=8.0.0",
    "pydantic>=2.0.0",
    "typer>=0.9.0",
    "python-slugify>=8.0.0",
    "tqdm>=4.65.0",
    "yt-dlp>=2023.12.30",
    "requests>=2.31.0",
    "websockets>=12.0",
    "brotli>=1.1.0",
    "certifi>=2023.11.17",
    "ffprobe",
    "ffmpeg",
    "curl_cffi>=0.5.0",
    "mutagen>=1.47.0",
    "xattr>=0.10.1",
    "pycryptodomex>=3.19.0",
    "secretstorage>=3.3.3",
    "pathlib2>=2.3.7"
]

[project.license]
text = "MIT"

[[project.authors]]
name = "VideoMilker Team"
email = "team@videomilker.com"

[[project.maintainers]]
name = "VideoMilker Team"
email = "team@videomilker.com"

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0"
]
test = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.10.0",
    "pytest-asyncio>=0.21.0"
]
docs = [
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "myst-parser>=1.0.0"
]
all = ["videomilker[dev,test,docs]"]

[project.urls]
Homepage = "https://github.com/videomilker/videomilker"
Documentation = "https://videomilker.readthedocs.io/"
Repository = "https://github.com/videomilker/videomilker.git"
    "Bug Tracker" = "https://github.com/videomilker/videomilker/issues"
    "Source Code" = "https://github.com/videomilker/videomilker"
Changelog = "https://github.com/videomilker/videomilker/blob/main/CHANGELOG.md"

[project.scripts]
vmx = "videomilker.main:main"
videomilker = "videomilker.main:main"
vm = "videomilker.main:main"

[project.gui-scripts]
videomilker-gui = "videomilker.gui:main"

[tool.setuptools.dynamic.version]
attr = "videomilker.version.__version__"

[tool.setuptools.packages.find]
where = ["src"]
include = ["videomilker*"]
exclude = ["tests*", "docs*"]

[tool.setuptools.package-data]
videomilker = ["py.typed"]

[tool.setuptools.exclude-package-data]
"*" = [ "*.pyc", "*.pyo", "*.pyd", "__pycache__", "*.so" ]

[tool.black]
target-version = ["py310"]
line-length = 120
skip-string-normalization = true
skip-magic-trailing-comma = true
force-exclude = """
/(
    | docs
    | setup.py
)/
"""

[tool.isort]
py_version = 310
sections = [
    "FUTURE",
    "STDLIB",
    "THIRDPARTY",
    "FIRSTPARTY",
    "LOCALFOLDER"
]
default_section = "THIRDPARTY"
known_third_party = []
known_first_party = []
known_local_folder = []
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 120
split_on_trailing_comma = true
lines_after_imports = 2
force_single_line = true
skip_glob = ["docs/*", "setup.py"]
filter_files = true

[tool.pytest.ini_options]
testpaths = ["tests", "test_*.py"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--strict-config",
    "--cov=src/videomilker",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests"
]

[tool.mypy]
python_version = "3.10"
ignore_missing_imports = true
follow_imports = "silent"
no_implicit_optional = false
strict_optional = false
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
warn_return_any = false
check_untyped_defs = false
disallow_untyped_calls = false
disallow_untyped_defs = false
disallow_incomplete_defs = false
disallow_untyped_decorators = false
disallow_subclassing_any = false
disallow_any_unimported = false
disallow_any_expr = false
disallow_any_decorated = false
disallow_any_explicit = false
disallow_any_generics = false
allow_untyped_globals = true
allow_redefinition = true
local_partial_types = false
implicit_reexport = true
strict_equality = true
show_error_context = false
show_column_numbers = false
show_error_codes = true
exclude = ["docs", "test", "tests"]

[tool.coverage.run]
source = ["src/videomilker"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
    "*/venv/*",
    "*/.venv/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]

[tool.pre-commit.ci]
autofix_commit_msg = "style: auto fixes from pre-commit hooks"
autoupdate_commit_msg = "ci: pre-commit autoupdate"

[tool.sphinx]
project = "VideoMilker"
copyright = "2024, VideoMilker Team"
author = "VideoMilker Team"
version = "1.0.0"
release = "1.0.0"
extensions = [
    "sphinx.ext.autodoc",
    "sphinx.ext.napoleon",
    "sphinx.ext.viewcode",
    "sphinx.ext.intersphinx",
    "myst_parser"
]
templates_path = ["_templates"]
exclude_patterns = ["_build", "Thumbs.db", ".DS_Store"]
html_theme = "sphinx_rtd_theme"
html_static_path = ["_static"]

[tool.ruff]
target-version = "py310"
line-length = 120
indent-width = 4
extend-exclude = ["docs", "test", "tests"]

[tool.ruff.lint]
select = ["F", "E"]
extend-select = ["W", "C90", "I", "N", "B", "A", "C4", "PERF", "RUF"]
ignore = []
fixable = ["ALL"]
unfixable = []
    preview = true
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.isort]
      force-single-line = true
      force-sort-within-sections = false
      lines-after-imports = 2
known-first-party = []
known-local-folder = []
known-third-party = []
section-order = [
    "future",
    "standard-library",
    "third-party",
    "first-party",
    "local-folder"
]

[tool.ruff.lint.mccabe]
      max-complexity = 24

[tool.ruff.lint.pycodestyle]
      ignore-overlong-task-comments = true

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.flake8-annotations]
      allow-star-arg-any = true
      ignore-fully-untyped = true

[tool.ruff.lint.pylint]
      max-args = 5
      max-branches = 12
      max-locals = 15
      max-statements = 50

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
    skip-magic-trailing-comma = false
line-ending = "auto"
    preview = false
    docstring-code-format = true

[tool.bandit]
exclude_dirs = ["tests", "test_*"]
skips = ["B101", "B601"]

[tool.safety]
output = "json"

[tool.pyright]
pythonVersion = "3.10"
typeCheckingMode = "basic"
reportDuplicateImport = true
reportInvalidStubStatement = true
reportOverlappingOverload = true
reportPropertyTypeMismatch = true
reportUntypedClassDecorator = false
reportUntypedFunctionDecorator = false
reportUntypedNamedTuple = false
reportUnusedImport = true
reportGeneralTypeIssues = false
reportMissingModuleSource = false
reportOptionalCall = false
reportOptionalIterable = false
reportOptionalMemberAccess = false
reportOptionalOperand = false
reportOptionalSubscript = false
reportPrivateImportUsage = false
reportUnboundVariable = false
exclude = ["docs", "setup.py"]
